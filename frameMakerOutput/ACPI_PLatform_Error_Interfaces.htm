<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN"><HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">
<META NAME="GENERATOR" CONTENT="Adobe FrameMaker 2016/HTML Export Filter">
<LINK REL="STYLESHEET" HREF="ACPI_PLatform_Error_Interfaces.css" CHARSET="ISO-8859-1" TYPE="text/css">
<TITLE> 18 ACPI Platform Error Interfaces (APEI)</TITLE></HEAD>
<BODY>
<DIV>
<H1 CLASS="Heading-1">
<A NAME="pgfId-1354531"></A><A NAME="78513"></A>ACPI Platform Error Interfaces (APEI)<DIV>
<IMG SRC="ACPI_PLatform_Error_Interfaces-1.gif" ALT="">
</DIV>
</H1>
<P CLASS="Body">
<A NAME="pgfId-1354532"></A>This section describes the ACPI Platform Error Interfaces (APEI), which provide a means for the platform to convey error information to OSPM. APEI extends existing hardware error reporting mechanisms and brings them together as components of a coherent hardware error infrastructure. APEI takes advantage of the additional hardware error information available in today&#8217;s hardware devices and integrates much more closely with the system firmware. </P>
<P CLASS="Body">
<A NAME="pgfId-1354533"></A>As a result, APEI provides the following benefits:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1354534"></A>Allows for more extensive error data to be made available in a standard error record format for determining the root cause of hardware errors. </LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354535"></A>Is extensible, so that as hardware vendors add new and better hardware error reporting mechanisms to their devices, APEI allows the platform and the OSPM to gracefully accommodate the new mechanisms.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1354536"></A>This provides information to help system designers understand basic issues about hardware errors, the relationship between the firmware and OSPM, and information about error handling and the APEI architecture components. </P>
<P CLASS="Body">
<A NAME="pgfId-1354537"></A>APEI consists of four separate tables:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1354538"></A>Error Record Serialization Table (ERST)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354539"></A>Boot Error Record Table (BERT)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354540"></A>Hardware Error Source Table (HEST)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354541"></A>Error Injection Table (EINJ)</LI>
</UL>
<DIV>
<H2 CLASS="Heading-2">
<A NAME="pgfId-1354546"></A>H<A NAME="_Toc258262556"></A>ardware Errors and Error Sources</H2>
<P CLASS="Body">
<A NAME="pgfId-1354547"></A>A hardware error is a recorded event related to a malfunction of a hardware component in a computer platform. The hardware components contain error detection mechanisms that detect when a hardware error condition exists. Hardware errors can be classified as either corrected errors or uncorrected errors as follows: </P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1354548"></A>A corrected error is a hardware error condition that has been corrected by the hardware or by the firmware by the time the OSPM is notified about the existence of the error condition. </LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354549"></A>An uncorrected error is a hardware error condition that cannot be corrected by the hardware or by the firmware. Uncorrected errors are either fatal or non-fatal. </LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1354550"></A>A fatal hardware error is an uncorrected or uncontained error condition that is determined to be unrecoverable by the hardware. When a fatal uncorrected error occurs, the system is restarted to prevent propagation of the error.</LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1354551"></A>A non-fatal hardware error is an uncorrected error condition from which OSPM can attempt recovery by trying to correct the error. These are also referred to as correctable or recoverable errors.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1354553"></A>Central to APEI is the concept of a hardware error source. A hardware error source is any hardware unit that alerts OSPM to the presence of an error condition. Examples of hardware error sources include the following:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1354554"></A>Processor machine check exception (for example, MC#)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354555"></A>Chipset error message signals (for example, SCI, SMI, SERR#, MCERR#)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354556"></A>I/O bus error reporting (for example, PCI Express root port error interrupt)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354557"></A>I/O device errors</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1354558"></A>A single hardware error source might handle aggregate error reporting for more than one type of hardware error condition. For example, a processor&#8217;s machine check exception typically reports processor errors, cache and memory errors, and system bus errors. </P>
<P CLASS="Body">
<A NAME="pgfId-1354559"></A>A hardware error source is typically represented by the following: </P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1354560"></A>One or more hardware error status registers.</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354561"></A>One or more hardware error configuration or control registers.</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1354562"></A>A signaling mechanism to alert OSPM to the existence of an error condition. </LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1354564"></A>In some situations, there is not an explicit signaling mechanism and OSPM must poll the error status registers to test for an error condition. However, polling can only be used for corrected error conditions since uncorrected errors require immediate attention by OSPM.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-2">
<A NAME="pgfId-1354567"></A>R<A NAME="_Toc258262557"></A>elationship between OSPM and System Firmware</H2>
<P CLASS="Body">
<A NAME="pgfId-1354568"></A>Both OSPM and system firmware play important roles in hardware error handling. APEI improves the methods by which both of these can contribute to the task of hardware error handling in a complementary fashion. APEI allows the hardware platform vendor to determine whether the firmware or OSPM will own key hardware error resources. APEI also allows the firmware to pass control of hardware error resources to OSPM when appropriate.</P>
</DIV>
<DIV>
<H2 CLASS="Heading-2">
<A NAME="pgfId-1354571"></A><A NAME="_Toc258262558"></A>Error Source Discovery</H2>
<P CLASS="Body">
<A NAME="pgfId-1354572"></A>Platforms enumerate error sources to OSPM via a set of tables that describe the error sources. OSPM may also support non-ACPI enumerated error sources such as: Machine Check Exception, Corrected Machine Check, NMI, PCI Express AER, and on Itanium&#8482; Processor Family (IPF) platforms the INIT error source. Non-ACPI error sources are not described by this specification.</P>
<P CLASS="Body">
<A NAME="pgfId-1354573"></A>During initialization, OSPM examines the tables and uses this information to establish the necessary error handlers that are responsible for processing error notifications from the platform.  </P>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1354576"></A>B<A NAME="_Toc258262559"></A>oot Error Source</H4>
<P CLASS="Body">
<A NAME="pgfId-1354577"></A>Under normal circumstances, when a hardware error occurs, the error handler receives control and processes the error. This gives OSPM a chance to process the error condition, report it, and optionally attempt recovery. In some cases, the system is unable to process an error. For example, system firmware or a management controller may choose to reset the system or the system might experience an uncontrolled crash or reset.</P>
<P CLASS="Body">
<A NAME="pgfId-1354578"></A>The boot error source is used to report unhandled errors that occurred in a previous boot. This mechanism is described in the BERT table. The boot error source is reported as a &#8216;one-time polled&#8217; type error source.  OSPM queries the boot error source during boot for any existing boot error records. The platform will report the error condition to OSPM via a Common Platform Error Record (CPER) compliant error record. The CPER format is described in the appendices of the UEFI Specification.</P>
<P CLASS="Body">
<A NAME="pgfId-1354579"></A>The Boot Error Record Table (BERT) format is shown in <A HREF="ACPI_PLatform_Error_Interfaces.htm#29315" CLASS="XRef">See Boot Error Record Table (BERT) Table.</A>. </P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1354581"></A><A NAME="29315"></A>Boot Error Record Table (BERT) Table</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1354584"></A>Field</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1354586"></A>Byte length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1354588"></A>Byte offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1354590"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354592"></A>Header Signature</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354594"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354596"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354598"></A>&#8216;BERT&#8217;. Signature for the Boot Error Record Table.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354600"></A>Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354602"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354604"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354606"></A>Length, in bytes, of BERT.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354608"></A>Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354610"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354612"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354614"></A>1</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354616"></A>Checksum</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354618"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354620"></A>9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354622"></A>Entire table must sum to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354624"></A>OEMID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354626"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354628"></A>10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354630"></A>OEM ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354632"></A>OEM Table ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354634"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354636"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354638"></A>The manufacturer model ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354640"></A>OEM Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354642"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354644"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354646"></A>OEM revision of the BERT for the supplied OEM table ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354648"></A>Creator ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354650"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354652"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354654"></A>Vendor ID of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354656"></A>Creator Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354658"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354660"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354662"></A>Revision of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354664"></A>Boot Error Region Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354666"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354668"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354670"></A>The length in bytes of the boot error region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354672"></A>Boot Error Region</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354674"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354676"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354678"></A>64-bit physical address of the Boot Error Region.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1354682"></A>The Boot Error Region is a range of addressable memory OSPM can access during initialization to determine if an unhandled error condition occurred. System firmware must report this memory range as firmware reserved. The format of the Boot Error Region follow that of an Error Status Block, this is defined in  <A HREF="ACPI_PLatform_Error_Interfaces.htm#41948" CLASS="XRef">See Generic Hardware Error Source.</A>. The format of the error status block is described by <A HREF="ACPI_PLatform_Error_Interfaces.htm#28892" CLASS="XRef">See Generic Error Status Block.</A>. </P>
<P CLASS="Body">
<A NAME="pgfId-1354757"></A>For details of some of the fields defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#16103" CLASS="XRef">See Generic Error Data Entry.</A>, please refer to the definition of Section Descriptors provided in the appendices of the UEFI Specification under the description of the Common Platform Error Record.</P>
</DIV>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1354760"></A>A<A NAME="_Toc258262560"></A>CPI Error Source</H4>
<P CLASS="Body">
<A NAME="pgfId-1354761"></A>The hardware error source describes a standardized mechanism platforms may use to describe their error sources. Use of this interface is the preferred way for platforms to describe their error sources as it is platform and processor-architecture independent and allows the platform to describe the operational parameters associated with error sources.  </P>
<P CLASS="Body">
<A NAME="pgfId-1354762"></A>This mechanism allows for the platform to describe error sources in detail; communicating operational parameters (i.e. severity levels, masking bits, and threshold values) to OSPM as necessary.  It also allows the platform to report error sources for which OSPM would typically not implement support (for example, chipset-specific error registers).  </P>
<P CLASS="Body">
<A NAME="pgfId-1354763"></A>The Hardware Error Source Table provides the platform firmware a way to describe a system&#8217;s hardware error sources to OSPM. The format of the Hardware Error Source Table is shown in <A HREF="ACPI_PLatform_Error_Interfaces.htm#93840" CLASS="XRef">See Hardware Error Source Table (HEST).</A>.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1354765"></A><A NAME="93840"></A>Hardware Error Source Table (HEST)</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458180"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458182"></A>Byte length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458184"></A>Byte offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458186"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354776"></A>Header Signature</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354778"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354780"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354782"></A>&#8220;HEST&#8221;. Signature for the Hardware Error Source Table.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354784"></A>Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354786"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354788"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354790"></A>Length, in bytes, of entire HEST. Entire table must be contiguous.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354792"></A>Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354794"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354796"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354798"></A>1</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354800"></A>Checksum</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354802"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354804"></A>9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354806"></A>Entire table must sum to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354808"></A>OEMID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354810"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354812"></A>10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354814"></A>OEM ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354816"></A>OEM Table ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354818"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354820"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354822"></A>The manufacturer model ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354824"></A>OEM Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354826"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354828"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354830"></A>OEM revision of the HEST for the supplied OEM table ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354832"></A>Creator ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354834"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354836"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354838"></A>Vendor ID of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354840"></A>Creator Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354842"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354844"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354846"></A>Revision of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354848"></A>Error Source Count</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354850"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354852"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354854"></A>The number of error source descriptors.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354856"></A>Error Source Structure[n]</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354858"></A>-</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354860"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354862"></A>A series of Error Source Descriptor Entries.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1354902"></A>The following sections detail each of the specific error source descriptors.</P>
<UL>
<LI CLASS="Note">
<A NAME="pgfId-1354903"></A>Error source types 3, 4, and 5 are reserved for legacy reasons and must not be used.</LI>
</UL>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1354904"></A>   IA-32 Architecture Machine Check Exception</H6>
<P CLASS="Body">
<A NAME="pgfId-1354905"></A>Processors implementing the IA-32 Instruction Set Architecture employ a machine check exception mechanism to alert OSPM to the presence of an uncorrected hardware error condition. The information in this table is used by OSPM to configure the machine check exception mechanism for each processor in the system.</P>
<P CLASS="Body">
<A NAME="pgfId-1354906"></A>Only one entry of this type is permitted in the HEST. OSPM applies the information specified in this entry to all processors.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1354907"></A><A NAME="83501"></A>IA-32 Architecture Machine Check Exception Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458200"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458202"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458204"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458206"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354918"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354920"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354922"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354924"></A>0 - IA-32 Architecture Machine Check Exception Structure.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354926"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354928"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354930"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354932"></A>This value serves to uniquely identify this error source against other error sources reported by the platform.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354934"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354936"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354938"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354940"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354942"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354944"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354946"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354948"></A>Bit [0] - FIRMWARE_FIRST: If set, this bit indicates to the OSPM that system firmware will handle errors from this source first.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1476380"></A>Bit [2] - GHES_ASSIST: If set, this bit indicates that although OSPM is responsible for directly handling the error (as expected when FIRMWARE_FIRST is not set), system firmware reports additional information in the context of an exception generated by the error. The additional information is reported in a Generic Hardware Error Source structure with a matching Related Source Id. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1476381"></A>NOTE: If FIRMWARE_FIRST is set, this bit is reserved.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1354949"></A>All other bits are reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354951"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354953"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354955"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354957"></A>Specifies whether MCE is to be enabled.  If set to 1, this field indicates this error source is to be enabled.  If set to 0, this field indicates that the error source is not to be enabled. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354959"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354961"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354963"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354965"></A>Indicates the number of error records to pre-allocate for this error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354967"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354969"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354971"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354973"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354975"></A>Global Capability Init Data</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354977"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354979"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354981"></A>Indicates the value of the machine check global capability register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354983"></A>Global Control Init Data</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354985"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354987"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354989"></A>Indicates the value to be written to the machine check global control register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354991"></A>Number Of Hardware Banks</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354993"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354995"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354997"></A>Indicates the number of hardware error reporting banks.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1354999"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355001"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355003"></A>33</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355005"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355007"></A>Machine Check Bank Structure[n]</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355009"></A>-</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355011"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355013"></A>A list of Machine Check Bank structures defined in  <A HREF="ACPI_PLatform_Error_Interfaces.htm#15938" CLASS="XRef">See IA-32 Architecture Machine Check Bank Structure.</A></P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1355016"></A><A NAME="15938"></A>   IA-32 Architecture Machine Check Bank Structure</H6>
<P CLASS="Body">
<A NAME="pgfId-1355017"></A>This table describes the attributes of a specific IA-32 architecture machine check hardware error bank.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355018"></A>IA-32 Architecture Machine Check Error Bank Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478688"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478690"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478692"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478694"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355029"></A>Bank Number</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355031"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355033"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355035"></A>Zero-based index identifies the machine check error bank.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355037"></A>Clear Status On Initialization</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355039"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355041"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355043"></A>If set, indicates the status information in this machine check bank is to be cleared during system initialization as follows:</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355044"></A>0 - Clear</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355045"></A>1 - Don&#8217;t clear</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355047"></A>Status Data Format</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355049"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355051"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355053"></A>Identifies the format of the data in the status register:</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355054"></A>0 - IA-32 MCA</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355055"></A>1 - Intel&#174; 64 MCA</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355056"></A>2 - AMD64MCA</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355057"></A>All other values are reserved</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355059"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355061"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355063"></A>3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355065"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355067"></A>Control Register MSR Address</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355069"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355071"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355073"></A>Address of the hardware bank&#8217;s control MSR.  Ignored if zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355075"></A>Control Init Data</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355077"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355079"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355081"></A>This is the value the OSPM will program into the machine check bank&#8217;s control register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355083"></A>Status Register MSR Address</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355085"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355087"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355089"></A>Address of the hardware bank&#8217;s MCi_STAT MSR.  Ignored if zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355091"></A>Address Register</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355092"></A>MSR Address</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355094"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355096"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355098"></A>Address of the hardware bank&#8217;s MCi_ADDR MSR.  Ignored if zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355100"></A>Misc Register</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355101"></A>MSR Address</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355103"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355105"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355107"></A>Address of the hardware bank&#8217;s MCi_MISC MSR.  Ignored if zero.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1355110"></A>   IA-32 Architecture Corrected Machine Check</H6>
<P CLASS="Body">
<A NAME="pgfId-1355111"></A>Processors implementing the IA-32 Instruction Set Architecture may report corrected processor errors to OSPM. The information in this table allows platform firmware to communicate key parameters of the corrected processor error reporting mechanism to OSPM, including whether CMC processing should be enabled.</P>
<P CLASS="Body">
<A NAME="pgfId-1355112"></A>Only one entry of this type is permitted in the HEST. OSPM applies the information specified in this entry to all processors.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355113"></A><A NAME="16818"></A>IA-32 Architecture Corrected Machine Check Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478791"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478793"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478795"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478797"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355124"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355126"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355128"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355130"></A>1 - IA-32 Architecture Corrected Machine Check Structure.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355132"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355134"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355136"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355138"></A>Uniquely identifies the error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355140"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355142"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355144"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355146"></A>Reserved</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355148"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355150"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355152"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355154"></A>Bit [0] - FIRMWARE_FIRST: If set, this bit indicates that system firmware will handle errors from this source first.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1476421"></A>Bit [2] - GHES_ASSIST: If set, this bit indicates that although OSPM is responsible for directly handling the error (as expected when FIRMWARE_FIRST is not set), system firmware reports additional information in the context of an interrupt generated by the error. The additional information is reported in a Generic Hardware Error Source structure with a matching Related Source Id.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1476422"></A>NOTE: If FIRMWARE_FIRST is set, this bit is reserved.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355155"></A>All other bits must be set to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355157"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355159"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355161"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355163"></A>If the field value is 1, indicates this error source is to be enabled.  If the field value is 0, indicates that the error source is not to be enabled.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355164"></A>If FIRMWARE_FIRST is set in the flags field, the Enabled field is ignored by OSPM.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355166"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355168"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355170"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355172"></A>Indicates the number of error records to pre-allocate for this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355174"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355176"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355178"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355180"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355182"></A>Notification Structure</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355184"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355186"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355188"></A>Hardware Error Notification Structure as defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#90281" CLASS="XRef">See Hardware Error Notification Structure.</A></P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355190"></A>Number Of Hardware Banks</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355192"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355194"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355196"></A>The number of hardware error reporting banks.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355198"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355200"></A>3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355202"></A>45</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355204"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355206"></A>Machine Check Bank Structure[n]</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355208"></A>-</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355210"></A>48</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355212"></A>A list of Machine Check Bank structures defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#15938" CLASS="XRef">See IA-32 Architecture Machine Check Bank Structure.</A>.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1355215"></A>   IA-32 Architecture Non-Maskable Interrupt</H6>
<P CLASS="Body">
<A NAME="pgfId-1355216"></A>Uncorrected platform errors are typically reported using the Non-Maskable Interrupt (NMI) vector (for example, INT 2). This table allows platform firmware to communicate parameters regarding the configuration and handling of NMI error conditions.</P>
<P CLASS="Body">
<A NAME="pgfId-1355217"></A>Only one entry of this type is permitted in the HEST.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355218"></A>IA-32 Architecture NMI Error Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458216"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458218"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458220"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458222"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355229"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355231"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355233"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355235"></A>2 - IA-32 Architecture NMI Structure.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355237"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355239"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355241"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355243"></A>Uniquely identifies this error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355245"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355247"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355249"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355251"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355253"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355255"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355257"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355259"></A>Indicates number of error records to pre-allocate for this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355261"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355263"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355265"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355267"></A>Indicates maximum number of error sections included in an error record created as a result of an error reported by this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355269"></A>Max Raw Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355271"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355273"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355275"></A>The size in bytes of the NMI error data.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1355278"></A> PCI Express Root Port AER Structure</H6>
<P CLASS="Body">
<A NAME="pgfId-1355279"></A>PCI Express (PCIe) root ports may implement PCIe Advanced Error Reporting (AER) support. This table contains information platform firmware supplies to OSPM for configuring AER support on a given root port.</P>
<P CLASS="Body">
<A NAME="pgfId-1355280"></A>The HEST may contain one entry of this type for each PCI Express root port if none of the entries has the GLOBAL flag set.  If the GLOBAL flag is set, there may only be one entry of this type and the information contained in that entry is applied to all PCIe root ports.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355281"></A>PCI Express Root Port AER Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458232"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458234"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458236"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458238"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355292"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355294"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355296"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355298"></A>6 - AER Root Port.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355300"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355302"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355304"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355306"></A>Uniquely identifies the error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355308"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355310"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355312"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355314"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355316"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355318"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355320"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470628"></A>Bit [0] - FIRMWARE_FIRST: If set, this bit indicates to the OSPM that system firmware will handle errors from this source first.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355323"></A>Bit [1] - GLOBAL: If set, indicates that the settings contained in this structure apply globally to all PCI Express Devices. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470646"></A>All other bits must be set to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355325"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355327"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355329"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355331"></A>If the field value is 1, indicates this error source is to be enabled.  If the field value is 0, indicates that the error source is not to be enabled.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355332"></A>If FIRMWARE_FIRST is set in the flags field, the Enabled field is ignored by the OSPM.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355334"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355336"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355338"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355340"></A>Indicates the number error records to pre-allocate for this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355342"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355344"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355346"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355348"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355350"></A>Bus</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355352"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355354"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355357"></A>Identifies the PCI Bus and Segment of the root port. The Bus is encoded in bits [7:0]. For systems that expose multiple PCI segment groups, the segment number is encoded in bits [23:8] and bits [31-24] must be zero. For systems that do not expose multiple PCI segment groups, bits [31:8] must be zero. If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355359"></A>Device</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355361"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355363"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355365"></A>Identifies the PCI Device Number of the root port.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355366"></A>If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355368"></A>Function</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355370"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355372"></A>22</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355374"></A>Identifies the PCI Function number of the root port.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355375"></A>If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355377"></A>Device Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355379"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355381"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355383"></A>Device control bits with which to initialize the device.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355385"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355387"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355389"></A>26</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355391"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355393"></A>Uncorrectable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355395"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355397"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355399"></A>Value to write to the root port&#8217;s Uncorrectable Error Mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355401"></A>Uncorrectable Error Severity</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355403"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355405"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355407"></A>Value to write to the root port&#8217;s Uncorrectable Error Severity register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355409"></A>Correctable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355411"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355413"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355415"></A>Value to write to the root port&#8217;s Correctable Error Mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355417"></A>Advanced Error Capabilities and Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355419"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355421"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355423"></A>Value to write to the root port&#8217;s Advanced Error Capabilities and Control Register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355425"></A>Root Error Command</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355427"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355429"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355431"></A>Value to write to the root port&#8217;s Root Error Command Register.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1355434"></A> PCI Express Device AER Structure</H6>
<P CLASS="Body">
<A NAME="pgfId-1355435"></A>PCI Express devices may implement AER support. This table contains information platform firmware supplies to OSPM for configuring AER support on a given PCI Express device.</P>
<P CLASS="Body">
<A NAME="pgfId-1355436"></A>The HEST may contain one entry of this type for each PCI Express endpoint device if none of the entries has the GLOBAL flag set. If the GLOBAL flag is set, there may only be one entry of this type and the information contained in that entry will be applied to all PCI Express endpoint devices.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355437"></A>PCI Express Device AER Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458248"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458250"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458252"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458254"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355448"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355450"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355452"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355454"></A>7 - AER Endpoint.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355456"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355458"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355460"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355462"></A>Uniquely identifies the error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355464"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355466"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355468"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355470"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355472"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355474"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355476"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355478"></A>Bit [0] - FIRMWARE_FIRST: If set, indicates that system firmware will handle errors from this source first.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355479"></A>Bit [1] - GLOBAL: If set, indicates that the settings contained in this structure apply globally to all PCI Express Devices.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355480"></A>All other bits must be set to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355482"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355484"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355486"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355488"></A>If the field value is 1, indicates this error source is to be enabled.  If the field value is 0, indicates that the error source is not to be enabled.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355489"></A>If FIRMWARE_FIRST is set in the flags field, the Enabled field is ignored by the OSPM.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355491"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355493"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355495"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355497"></A>Indicates the number of error records to pre-allocate for this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355499"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355501"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355503"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355505"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source. Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355507"></A>Bus</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355509"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355511"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355514"></A>Identifies the PCI Bus and Segment of the device. The Bus is encoded in bits [7:0]. For systems that expose multiple PCI segment groups, the segment number is encoded in bits [23:8] and bits [31:24] must be zero. For systems that do not expose multiple PCI segment groups, bits 8-31 must be zero. If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355516"></A>Device</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355518"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355520"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355522"></A>Identifies the PCI Device Number of the device.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355523"></A>If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355525"></A>Function</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355527"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355529"></A>22</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355531"></A>Identifies the PCI Function Number of the device.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355532"></A>If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355534"></A>Device Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355536"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355538"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355540"></A>Device control bits with which to initialize the device.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355542"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355544"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355546"></A>26</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355548"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355550"></A>Uncorrectable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355552"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355554"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355556"></A>Value to write to the root port&#8217;s Uncorrectable Error Mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355558"></A>Uncorrectable Error Severity</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355560"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355562"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355564"></A>Value to write to the root port&#8217;s Uncorrectable Error Severity register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355566"></A>Correctable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355568"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355570"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355572"></A>Value to write to the root port&#8217;s Correctable Error Mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355574"></A>Advanced Error Capabilities and Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355576"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355578"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355580"></A>Value to write to the root port&#8217;s Advanced Error Capabilities and Control Register.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
</DIV>
<DIV>
<H3 CLASS="ACPIHeading-4">
<A NAME="pgfId-1355583"></A>   PCI Express/PCI-X Bridge AER Structure</H3>
<P CLASS="Body">
<A NAME="pgfId-1355584"></A>PCI Express/PCI-X bridges that implement AER support implement fields that control the behavior how errors are reported across the bridge.</P>
<P CLASS="Body">
<A NAME="pgfId-1355585"></A>The HEST may contain one entry of this type for each PCI Express/PCI-X bridges if none of the entries has the GLOBAL flag set.  If the GLOBAL flag is set, there may only be one entry of this type and the information contained in that entry will be applied to all PCI Express/ PCI-X bridges.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355586"></A>PCI Express Bridge AER Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458264"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458266"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458268"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458270"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355597"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355599"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355601"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355603"></A>8 - AER Bridge.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355605"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355607"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355609"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355611"></A>Uniquely identifies the error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355613"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355615"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355617"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355619"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355621"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355623"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355625"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355627"></A>Bit [0] - FIRMWARE_FIRST: If set, indicates that system firmware will handle errors from this source first.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355628"></A>Bit [1] - GLOBAL: If set, indicates that the settings contained in this structure apply globally to all PCI Express Bridges.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355629"></A>All other bits must be set to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355631"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355633"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355635"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355637"></A>If the field value is 1, indicates this error source is to be enabled.  If the field value is 0, indicates that the error source is not to be enabled.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355638"></A>If FIRMWARE_FIRST is set in the flags field, the Enabled field is ignored by the OSPM.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355640"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355642"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355644"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355646"></A>Indicates the number of error records to pre-allocate for this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355648"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355650"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355652"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355654"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355656"></A>Bus</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355658"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355660"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355663"></A>Identifies the PCI Bus and Segment of the bridge. The Bus is encoded in bits [7:0]. For systems that expose multiple PCI segment groups, the segment number is encoded in bits [23:8] and bits [31:24] must be zero. For systems that do not expose multiple PCI segment groups, bits 8-31 must be zero. If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355665"></A>Device</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355667"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355669"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355671"></A>Identifies the PCI device number of the bridge.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355672"></A>If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355674"></A>Function</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355676"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355678"></A>22</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355680"></A>Identifies the PCI function number of the bridge.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355681"></A>If the GLOBAL flag is specified, this field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355683"></A>Device Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355685"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355687"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355689"></A>Device control bits with which to initialize the device.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355691"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355693"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355695"></A>26</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355697"></A>This value must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355699"></A>Uncorrectable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355701"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355703"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355705"></A>Value to write to the bridge&#8217;s Uncorrectable Error Mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355707"></A>Uncorrectable Error Severity</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355709"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355711"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355713"></A>Value to write to the bridge&#8217;s Uncorrectable Error Severity register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355715"></A>Correctable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355717"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355719"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355721"></A>Value to write to the bridge&#8217;s Correctable Error Mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355723"></A>Advanced Error Capabilities and Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355725"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355727"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355729"></A>Value to write to the bridge&#8217;s Advanced Error Capabilities and Control Register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355731"></A>Secondary Uncorrectable Error Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355733"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355735"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355737"></A>Value to write to the bridge&#8217;s secondary uncorrectable error mask register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355739"></A>Secondary Uncorrectable Error Severity</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355741"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355743"></A>48</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355745"></A>Value to write to the bridge&#8217;s secondary uncorrectable error severity register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355747"></A>Secondary Advanced Capabilities and Control</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355749"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355751"></A>52</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355753"></A>Value to write to the bridge&#8217;s secondary advanced capabilities and control register.</P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1355756"></A><A NAME="41948"></A>   Generic Hardware Error Source</H6>
<P CLASS="Body">
<A NAME="pgfId-1355757"></A>The platform may describe a generic hardware error source to OSPM using the Generic Hardware Error Source structure. A generic hardware error source is an error source that either notifies OSPM of the presence of an error using a non-standard notification mechanism or reports error information that is encoded in a non-standard format.</P>
<P CLASS="Body">
<A NAME="pgfId-1355758"></A>Using the information in a Generic Hardware Error Source structure, OSPM configures an error handler to read the error data from an error status block - a range of memory set aside by the platform for recording error status information.</P>
<P CLASS="Body">
<A NAME="pgfId-1355759"></A>As the generic hardware error source is non-standard, OSPM does not implement built-in support for configuration and control operations. The error source must be configured by system firmware during boot.</P>
<P CLASS="Body">
<A NAME="pgfId-1474190"></A>Some platforms may describe multiple Generic Hardware Error Source structures with different notification types, as defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#59391" CLASS="XRef">See Generic Hardware Error Source Structure.</A>. For example, a platform may describe one error source for the handling of synchronous errors (e.g. MCE or SEA), and a second source for handling asynchronous errors (e.g. SCI or External Interrupt).</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355760"></A><A NAME="59391"></A>Generic Hardware Error Source Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478887"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478889"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478891"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478893"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355771"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355773"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355775"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355777"></A>9 - Generic Hardware Error Source Structure.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355779"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355781"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355783"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355785"></A>Uniquely identify the error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355787"></A>Related Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355789"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355791"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1476497"></A>This field represents the Source Id of an alternate error source for which the platform:</P>
<P CLASS="TableBody">
<A NAME="pgfId-1476498"></A>(a) Requires Firmware-First handling (FIMWARE_FIRST flag is set on alternate error source). See Section 18.4, &#8220;Firmware First Error Handling&#8221;.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1476499"></A>(b) Provides additional information in the context of a generated exception or interrupt (GHES_ASSIST flag is set on alternate error source).</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355794"></A>If this generic error source does not represent an alternate source, this field must be set to 0xFFFF. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355796"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355798"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355800"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355802"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355804"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355806"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355808"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355810"></A>If the field value is 1, indicates this error source is to be enabled.  If the field value is 0, indicates that the error source is not to be enabled.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355812"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355814"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355816"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355818"></A>Indicates the number of error records to pre-allocate for this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355820"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355822"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355824"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355826"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source.  Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355828"></A>Max Raw Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355830"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355832"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355834"></A>Indicates the size in bytes of the error data recorded by this error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355836"></A>Error Status Address</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355838"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355840"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1363988"></A>Generic Address Structure as defined in <A HREF="ACPI_Software_Programming_Model.htm#_Ref42578254" CLASS="XRef">See Generic Address Structure.</A>. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1355843"></A>This field specifies the location of a register that contains the physical address of a block of memory that holds the error status data for this error source.  This range of memory must reside in firmware reserved memory. OSPM maps this range into system address space and reads the error status information from the mapped address.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355845"></A>Notification Structure</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355847"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355849"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355851"></A>Hardware Error Notification Structure as defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#90281" CLASS="XRef">See Hardware Error Notification Structure.</A>. This structure specifies how this error source notifies OSPM that an error has occurred.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355853"></A>Error Status Block Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355855"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355857"></A>60</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355859"></A>Identifies the length in bytes of the error status data block.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1355863"></A>The Error Status Address field specifies the location of an 8-byte memory-mapped register that holds the physical address of the error status block.  This error status block must reside in a range of memory reported to OSPM as firmware reserved. OSPM maps the error status buffer into system address space in order to read the error data.</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1355864"></A><A NAME="55007"></A>   Generic Error Data</H6>
<P CLASS="Body">
<A NAME="pgfId-1355865"></A>The Error Status Block contains the error status information for a given generic error source. OSPM provides an error handler that formats one or more of these blocks as necessary for the specific operating system.</P>
<P CLASS="Body">
<A NAME="pgfId-1355866"></A>The generic error status block includes two levels of information. The top level is a Generic Error Status Block structure and is defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#28892" CLASS="XRef">See Generic Error Status Block.</A>.  Following the Generic Error Status Block structure are one or more Generic Error Data Entry structures, defined in  <A HREF="ACPI_PLatform_Error_Interfaces.htm#16103" CLASS="XRef">See Generic Error Data Entry.</A>. </P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355868"></A><A NAME="28892"></A>Generic Error Status Block</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478987"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478989"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478991"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1478993"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355879"></A>Block Status</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355881"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355883"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355885"></A>Indicates the type of error information reported in the error packet.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355886"></A>Bit [0] - Uncorrectable Error Valid: If set to one, indicates that an uncorrectable error condition exists.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355887"></A>Bit [1] - Correctable Error Valid: If set to one, indicates that a correctable error condition exists.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355888"></A>Bit [2] - Multiple Uncorrectable Errors: If set to one, indicates that more than one uncorrectable errors have been detected.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355889"></A>Bit [3] - Multiple Correctable Errors: If set to one, indicates that more than one correctable errors have been detected.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355890"></A>Bit [13:4] - Error Data Entry Count: This value indicates the number of Error Data Entries found in the Data section.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355891"></A>Bit [31:14] - Reserved</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355893"></A>Raw Data Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355895"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355897"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355899"></A>Offset in bytes from the beginning of the Error Status Block to raw error data. The raw data must follow any Generic Error Data Entries.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355901"></A>Raw Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355903"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355905"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355907"></A>Length in bytes of the raw data.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355909"></A>Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355911"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355913"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355915"></A>Length in bytes of the generic error data.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355917"></A>Error Severity</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355919"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355921"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355923"></A>Identifies the error severity of the reported error:</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355924"></A>0 - Recoverable<BR>
1 - Fatal<BR>
2 - Corrected<BR>
3 - None</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355925"></A>Note: This is the error severity of the entire event.  Each Generic Error Data Entry also includes its own Error Severity field.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355927"></A>Generic Error Data Entries</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355929"></A>Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355931"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355933"></A>The information contained in this field is a collection of zero or more Generic Error Data Entries (see <A HREF="ACPI_PLatform_Error_Interfaces.htm#16103" CLASS="XRef">See Generic Error Data Entry.</A>).</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1355939"></A>One or more Generic Error Data Entry structures may be recorded in the Generic Error Data Entries field of the Generic Error Status Block structure.  This allows the platform to accumulate information for multiple hardware components related to a given error event.  For example, if the generic error source represents an error that occurs on a device on the secondary side of a PCI Express / PCI-X Bridge, it is useful to record error information from the PCI Express Bridge and from the PCI-X device.  Utilizing two Generic Error Data Entry structures enables this. <A HREF="ACPI_PLatform_Error_Interfaces.htm#16103" CLASS="XRef">See Generic Error Data Entry.</A> defines the layout of a Generic Error Data Entry.</P>
<P CLASS="Body">
<A NAME="pgfId-1355940"></A>For details of some of the fields defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#16103" CLASS="XRef">See Generic Error Data Entry.</A>. Please refer to the definition of Section Descriptors provided in the appendices of the UEFI Specification under the description of the Common Platform Error Record.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1355942"></A><A NAME="16103"></A>Generic Error Data Entry</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1355945"></A>Field</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1355947"></A>Byte Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1355949"></A>Byte Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1355951"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355953"></A>Section Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355955"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355957"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355959"></A>Identifies the type of error data in this entry.  </P>
<P CLASS="TableBody">
<A NAME="pgfId-1355960"></A>See the Section Type field of the Section Descriptor in the <EM CLASS="Italic">
UEFI Specification</EM>
.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355962"></A>Error Severity</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355964"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355966"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355968"></A>Identifies the severity of the reported error.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355969"></A>0 - Recoverable<BR>
1 - Fatal<BR>
2 - Corrected<BR>
3 - None</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355971"></A>Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355973"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355975"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355977"></A>The revision number is 0x300.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355978"></A>See the Revision field of the Section Descriptor in the <EM CLASS="Italic">
UEFI Specification</EM>
.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355980"></A>Validation Bits</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355982"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355984"></A>22</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355986"></A>Identifies whether certain fields are populated with valid data. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1474318"></A>This field indicates the validity of the following fields: </P>
<P CLASS="TableBody">
<A NAME="pgfId-1474319"></A>Bit 0 - If 1, the FRUId field contains valid information.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1474320"></A>Bit 1 - If 1, the FRUString FRU Text field contains valid information.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1474321"></A>Bit 2 - If 1, the TimeStamp field contains valid information.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1474322"></A>Bit 7:3 - Reserved, must be zero..</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355989"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355991"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355993"></A>23</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355995"></A>Flags describing the error data.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1355996"></A>See the Flags field of the Section Descriptor in the <EM CLASS="Italic">
UEFI Specification </EM>
appendix titled<EM CLASS="Italic">
 &quot;Common Platform Error Record&#8221;</EM>
.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1355998"></A>Error Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356000"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356002"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356004"></A>Length in bytes of the generic error data.  </P>
<P CLASS="TableBody">
<A NAME="pgfId-1474290"></A>It is valid to have a Data Length of zero. This would be used for instance in firmware-first error handling where the platform reports errors to the OSPM using NMI. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356006"></A>FRU Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356008"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356010"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356012"></A>Identifies the Field Replaceable Unit.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356013"></A>See the FRU Id field of the Section Descriptor in the <EM CLASS="Italic">
UEFI Specification </EM>
appendix titled<EM CLASS="Italic">
 &quot;Common Platform Error Record&#8221;.</EM>
</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356015"></A>FRU Text</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356017"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356019"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356021"></A>Text field describing the Field Replaceable Unit.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356022"></A>See the FRU Text field of the Section Descriptor in the <EM CLASS="Italic">
UEFI Specification </EM>
appendix titled<EM CLASS="Italic">
 &quot;Common Platform Error Record&#8221;.</EM>
</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474461"></A>Timestamp</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474463"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474465"></A>64</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1474522"></A>If marked valid per the validation bits field, this field correlates to the time when the error information was collected by the system software and may not necessarily represent the time of the error event. The timestamp contains the local time in BCD format.</P>
<P CLASS="Normal">
<A NAME="pgfId-1474523"></A></P>
<P CLASS="TableBody">
<A NAME="pgfId-1474467"></A>See the Timestamp field of the Error Record Header section in the <EM CLASS="Italic">
EFI Specification </EM>
appendix titled<EM CLASS="Italic">
 &quot;Common Platform Error Record </EM>
&#8221;.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356024"></A>Data</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356026"></A>Error Data Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356028"></A>64</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356030"></A>Generic error data.  </P>
<P CLASS="TableBody">
<A NAME="pgfId-1356031"></A>The information contained in this field must match one of the error record section types defined in the <EM CLASS="Italic">
UEFI Specification</EM>
 appendix, &#8220;Common Platform Error Record&#8221;.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356034"></A><A NAME="26005"></A> Event Notification For Generic Error Sources</H6>
<P CLASS="Body">
<A NAME="pgfId-1356035"></A>An event notification is recommended for corrected errors where latency in processing error reports is not critical to proper system operation. The implementation of Event notification requires the platform to define a device with PNP ID PNP0C33 in the ACPI namespace, referred to as the error device. This device is used to notify the OSPM that a generic error source is reporting an error. Since multiple generic error sources can use event notification, it is the responsibility of the OSPM to scan the list of these generic error sources and check the block status field ( <A HREF="ACPI_PLatform_Error_Interfaces.htm#28892" CLASS="XRef">See Generic Error Status Block.</A>) to identify the source that reported the error. </P>
<P CLASS="Body">
<A NAME="pgfId-1472107"></A>The platform is responsible for providing a control method that issues a NOTIFY on the error device (PNP0C33), with a notification code of type 0x80.</P>
<P CLASS="Body">
<A NAME="pgfId-1356036"></A>For traditional ACPI platforms the event signaling follows the model described in <A HREF="ACPI_Software_Programming_Model.htm#45352" CLASS="XRef">See Queuing the Matching Control Method for Execution.</A>. The platform implements a general purpose event (GPE) for the error notification, and the GPE has an associated control method.</P>
<P CLASS="Body">
<A NAME="pgfId-1356037"></A>An example of a GPE control method for error notification is the following:</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356039"></A>    Method (&#92;_GPE._L08)  {  // GPE 8 level error notification</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356040"></A>        Notify (error_device, 0x80)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472277"></A>    }</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472176"></A>For HW-reduced ACPI platforms, the event signaling follows the model described in <A HREF="ACPI_Software_Programming_Model.htm#19454" CLASS="XRef">See GPIO-signaled ACPI Events.</A> and <A HREF="ACPI_Software_Programming_Model.htm#36453" CLASS="XRef">See Interrupt-signaled ACPI events.</A>. The platform implements a notification of error events via interrupts or a GPIO pin. In both cases these are associated with an _EVT control method.</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472177"></A>An example of an _EVT control method for GPIO-based error notification is the following: </P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472178"></A>    Method (&#92;_EVT) { // GPIO pin 300 error notification</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472179"></A>          Switch (Arg1) {</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472180"></A>                Case (300) { </P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472181"></A>                       Notify (error_device, 0x80)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472182"></A>                 }</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472183"></A>          }</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1472184"></A>    }</P>
<P CLASS="Body">
<A NAME="pgfId-1472163"></A>The overall flow when the platform uses the event notification is:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1472164"></A>The platform enumerates the error source with event as the notification method using the format in <A HREF="ACPI_PLatform_Error_Interfaces.htm#59391" CLASS="XRef">See Generic Hardware Error Source Structure.</A> and <A HREF="ACPI_PLatform_Error_Interfaces.htm#28892" CLASS="XRef">See Generic Error Status Block.</A></LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1356044"></A>The platform surfaces an error device, PNP ID PNP0C33, to the OSPM</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1472332"></A>When the platform is ready to report an error, the platform populates the error status block including the block status field ( <A HREF="ACPI_PLatform_Error_Interfaces.htm#28892" CLASS="XRef">See Generic Error Status Block.</A>)</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1472336"></A>Traditional ACPI platforms signal the error using an SCI, on the appropriate GPE:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1472337"></A>The OSPM evaluates the GPE control method associated with this event as indicated on <A HREF="ACPI_Software_Programming_Model.htm#45352" CLASS="XRef">See Queuing the Matching Control Method for Execution.</A></LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1472388"></A>OSPM responds to this notification by checking the error status block of all generic error sources with the SCI Generic notification type to identify the source reporting the error</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1472396"></A>HW-reduced ACPI platforms signal the error using a GPIO interrupt or another interrupt declared under a generic event device (<A HREF="ACPI_Software_Programming_Model.htm#36453" CLASS="XRef">See Interrupt-signaled ACPI events.</A>). In the case of GPIO-signaled events, an _AEI object lists the appropriate GPIO pin, while for Interrupt-signaled events a _CRS object is used to list the interrupt:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1472397"></A>The OSPM evaluates the control method associated with this event as indicated in <A HREF="ACPI_Software_Programming_Model.htm#50818" CLASS="XRef">See The Event (_EVT) Method for Handling GPIO-signaled Events.</A> and <A HREF="ACPI_Software_Programming_Model.htm#63848" CLASS="XRef">See The Event (_EVT) Method for Handling Interrupt-signaled Events.</A>.</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1472398"></A>OSPM responds to this notification by checking the error status block of all generic error sources with the GPIO-Signal notification or Interrupt-signaled notification types to identify the source reporting the error.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1474568"></A><A NAME="25719"></A>Generic Hardware Error Source version 2 (GHESv2 - Type 10)</H6>
<P CLASS="Body">
<A NAME="pgfId-1474570"></A>This is an extension to the Generic Hardware Error source structure (<A HREF="ACPI_PLatform_Error_Interfaces.htm#41948" CLASS="XRef">See Generic Hardware Error Source.</A>) for hardware-reduced platforms that rely on RAS controllers for generation of generic error records. A RAS controller may be a hardware or firmware entity that may execute in parallel with OS execution (e.g., a RAS controller may be firmware running on an independent microcontroller, or it could be in the form of platform firmware that runs on one of the application processors). Platforms with RAS controllers must prevent concurrent accesses to the Error Status Block (i.e., the RAS controller must not overwrite the Error Status Block before the OS has completed reading it). <A HREF="ACPI_PLatform_Error_Interfaces.htm#80388" CLASS="XRef">See APEI error flow example with external RAS controller.</A> provides a high level example of how the RAS controller might interact with the OS.  </P>
<P CLASS="Normal">
<A NAME="pgfId-1474574"></A><IMG SRC="ACPI_PLatform_Error_Interfaces-2.gif" ALIGN="BASELINE" ALT="">
</P>
<DIV>
<H6 CLASS="FigureTitle">
<A NAME="pgfId-1474575"></A><A NAME="80388"></A>APEI error flow example with external RAS controller</H6>
<P CLASS="Body">
<A NAME="pgfId-1474576"></A>For GHESv2 error sources, the OSPM must acknowledge the consumption of the Error Status Block by writing to the &#8220;Read Ack Register&#8221; listed in the GHESv2 structure (described in <A HREF="ACPI_PLatform_Error_Interfaces.htm#24463" CLASS="XRef">See  Generic Hardware Error Source version 2 (GHESv2) Structure.</A>).  </P>
<P CLASS="Body">
<A NAME="pgfId-1474577"></A>For platforms that describe multiple Generic Hardware Error Sources: The platform must provide a unique memory region for the Error Status Block of each error source.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1474579"></A><A NAME="24463"></A> Generic Hardware Error Source version 2 (GHESv2) Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1474694"></A>Name</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1474730"></A>Byte Length</P>
<P CLASS="TableHeading">
<A NAME="pgfId-1474696"></A>&nbsp;</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1474698"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1474700"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474591"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474593"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474595"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474597"></A>10 - Generic Hardware Error Source (version 2) structure</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474599"></A>Equivalent fields in <A HREF="ACPI_PLatform_Error_Interfaces.htm#59391" CLASS="XRef">See Generic Hardware Error Source Structure.</A> (Generic Hardware Error Source Structure)</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474601"></A>62</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474603"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474605"></A>Same format as fields in <A HREF="ACPI_PLatform_Error_Interfaces.htm#59391" CLASS="XRef">See Generic Hardware Error Source Structure.</A> (Generic Hardware Error Source Structure) starting from Source Id and ending in Error Status Block Length inclusive</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474608"></A>Read Ack Register</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474610"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474612"></A>64</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474614"></A>Generic Address Structure as defined in <A HREF="ACPI_Software_Programming_Model.htm#_Ref42578254" CLASS="XRef">See Generic Address Structure.</A> . This field specifies the location of the Read Ack Register used to notify the RAS controller that OSPM has processed the Error Status Block. The OSPM writes the bit(s) specified in Read Ack Write, while preserving the bit(s) specified in Read Ack Preserve.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474616"></A>Read Ack Preserve</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474618"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474620"></A>76</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474622"></A>Contains a mask of bits to preserve when writing the Read Ack register.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474624"></A>Read Ack Write</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474626"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474628"></A>84</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474630"></A>Contains a mask of bits to set when writing the Read Ack register.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1474634"></A>These are the steps the OS must take once detecting an error from a particular GHESv2 error source:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1474635"></A>OSPM detects error (via interrupt/exception or polling the block status)</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1474636"></A>OSPM copies the error status block</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1474637"></A>OSPM clears the block status field of the error status block</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1474638"></A>OSPM acknowledges the error via Read Ack register.  For example:</LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1474639"></A>OSPM reads the Read Ack register &#61669; X</LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1474640"></A>OSPM writes &#61669; (( X &amp; ReadAckPreserve) | ReadAckWrite)</LI>
</UL>
</DIV>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1472390"></A><A NAME="37420"></A>   Hardware Error Notification</H6>
<P CLASS="Body">
<A NAME="pgfId-1356051"></A>This table describes the notification mechanism associated with a hardware error source.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356053"></A><A NAME="90281"></A>Hardware Error Notification Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458280"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458282"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458284"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458286"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356064"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356066"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356068"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356070"></A>Identifies the notification type:</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356071"></A>0 - Polled</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356072"></A>1 - External Interrupt</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356073"></A>2 - Local Interrupt</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356074"></A>3 - SCI</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356075"></A>4 - NMI</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470590"></A>5 - CMCI</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470591"></A>6 - MCE</P>
<P CLASS="TableBody">
<A NAME="pgfId-1472424"></A>7 - GPIO-Signal</P>
<P CLASS="TableBody">
<A NAME="pgfId-1474851"></A>8 - ARMv8 SEA</P>
<P CLASS="TableBody">
<A NAME="pgfId-1474852"></A>9 - ARMv8 SEI</P>
<P CLASS="TableBody">
<A NAME="pgfId-1474853"></A>10 - External Interrupt - GSIV</P>
<P CLASS="TableBody">
<A NAME="pgfId-1476520"></A>11 - Software Delegated Exception - See Links to ACPI-Related Documents (http://uefi.org/acpi) under the heading, &#8220;SDEI Specification.&#8221;</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356076"></A>All other values are reserved</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356078"></A>Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356080"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356082"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356084"></A>Total length of the structure in bytes.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356086"></A>Configuration Write Enable</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356088"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356090"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356092"></A>This field indicates whether configuration parameters may be modified by OSPM. If the bit for the associated parameter is set, the parameter is writeable by OSPM:</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356093"></A>Bit [0]: Type</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356094"></A>Bit [1]: Poll Interval</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356095"></A>Bit [2]: Switch To Polling Threshold Value</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356096"></A>Bit [3]: Switch To Polling Threshold Window</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356097"></A>Bit [4]: Error Threshold Value</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356098"></A>Bit [5]: Error Threshold Window</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356099"></A>All other bits are reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356101"></A>Poll Interval</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356103"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356105"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356107"></A>Indicates the poll interval in milliseconds OSPM should use to periodically check the error source for the presence of an error condition.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356109"></A>Vector</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356111"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356113"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356115"></A>Interrupt vector. For type 10 &#8220;External Interrupt - GSIV&#8221;, this field specifies the GSIV triggered by the error source.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356117"></A>Switch To Polling Threshold Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356119"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356121"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356123"></A>The number of error interrupts that must occur within Switch To Polling Threshold Interval before OSPM switches the error source to polled mode.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356125"></A>Switch To Polling Threshold Window</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356127"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356129"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356131"></A>Indicates the time interval in milliseconds that Switch To Polling Threshold Value interrupts must occur within before OSPM switches the error source to polled mode.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356133"></A>Error Threshold Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356135"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356137"></A>20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356139"></A>Indicates the number of error events that must occur within Error Threshold Interval before OSPM processes the event as an error condition.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356141"></A>Error Threshold Window</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356143"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356145"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356147"></A>Indicates the time interval in milliseconds that Error Threshold Value errors must occur within before OSPM processes the event as an error condition.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1475876"></A><A NAME="96254"></A> IA-32 Architecture Deferred Machine Check</H6>
<P CLASS="Body">
<A NAME="pgfId-1475976"></A>Processors implementing the IA-32 Instruction Set Architecture may report Deferred errors to OSPM. These errors indicate that data has been corrupted but not consumed. The information in this table allows platform firmware to communicate key parameters of the deferred processor error reporting mechanism to OSPM, including whether Deferred Machine Check (DMC) processing should be enabled.</P>
<P CLASS="Body">
<A NAME="pgfId-1475977"></A>Only one entry of this type is permitted in the HEST. OSPM applies the information specified in this entry to all processors.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1475991"></A>Architecture Deferred Machine Check Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1479109"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1479111"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1479113"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="Body">
<A NAME="pgfId-1479115"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476038"></A>Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476040"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476042"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476044"></A>11 - IA-32 Architecture Deferred Machine Check Structure.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476046"></A>Source Id</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476048"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476050"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476052"></A>This value serves to uniquely identify this error source against other error sources reported by the platform.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476054"></A>Reserved</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476056"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476058"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476060"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476062"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476064"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476066"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476068"></A>Bit [0] - FIRMWARE_FIRST: If set, this bit indicates to the OSPM that system firmware will handle errors from this source first.</P>
<P CLASS="Normal">
<A NAME="pgfId-1476454"></A>Bit [2] - GHES_ASSIST: If set, this bit indicates that although OSPM is responsible for directly handling the error (as expected when FIRMWARE_FIRST is not set), system firmware reports additional information in the context of an interrupt generated by the error. The additional information is reported in a Generic Hardware Error Source structure with a matching Related Source Id. </P>
<P CLASS="Normal">
<A NAME="pgfId-1476455"></A>NOTE: If FIRMWARE_FIRST is set, this bit is reserved.</P>
<P CLASS="Normal">
<A NAME="pgfId-1476069"></A>All other bits must be set to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476071"></A>Enabled</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476073"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476075"></A>7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476077"></A>If the field value is 1, indicates this error source is to be enabled. If the field value is 0, indicates that the error source is not to be enabled. If FIRMWARE_FIRST is set in the flags field, the Enabled field is ignored by OSPM.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476079"></A>Number of Records To Pre-allocate</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476081"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476083"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476085"></A>Indicates the number of error records to pre-allocate for this error source. Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476087"></A>Max Sections Per Record</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476089"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476091"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476093"></A>Indicates the maximum number of error sections included in an error record created as a result of an error reported by this error source. Must be &gt;= 1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476095"></A>Notification Structure</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476097"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476099"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476101"></A>Hardware Error Notification Structure as defined in Table 18-345</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476103"></A>Number Of Hardware Banks</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476105"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476107"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476109"></A>Indicates the number of hardware error reporting banks.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476111"></A>Reserved</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476113"></A>3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476115"></A>45</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476117"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476119"></A>Machine Check Bank Structure[n]</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476121"></A>-</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476123"></A>48</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="Normal">
<A NAME="pgfId-1476125"></A>A list of Machine Check Bank structures defined in</P>
<P CLASS="Normal">
<A NAME="pgfId-1476126"></A>Section 18.3.2.1.1.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-2">
<A NAME="pgfId-1356152"></A><A NAME="23929"></A>Firmware First Error Handling</H2>
<P CLASS="Body">
<A NAME="pgfId-1356153"></A>It may be necessary for the platform to process certain classes of errors in firmware before relinquishing control to OSPM for further error handling. Errata management and error containment are two examples where firmware-first error handling is beneficial. Generic hardware error sources support this model through the related source ID. </P>
<P CLASS="Body">
<A NAME="pgfId-1356154"></A>The platform reports the original error source to OSPM via the hardware error source table (HEST) and sets the FIRMWAREFIRST flag for this error source. In addition, the platform must report a generic error source with a related source ID set to the original source ID. This generic error source is used to notify OSPM of the errors on the original source and their status after the firmware first handling. </P>
<P CLASS="Body">
<A NAME="pgfId-1472452"></A>There are different notification strategies that can be used in firmware first handling; the following options are available to the platform:</P>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1472453"></A>Traditional ACPI platforms may use NMI to notify the OSPM of both corrected and uncorrected errors for a given error source</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1472492"></A>Traditional ACPI platforms may use NMI to report uncorrected errors and the SCI to report corrected errors</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1472493"></A>Traditional ACPI platforms may use NMI to report uncorrected errors and polling to notify the OSPM of corrected errors</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1472498"></A>HW-reduced ACPI platforms may use GPIO-signaled events, Interrupt-signaled events, or polling to report corrected errors.</LI>
</UL>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1356162"></A>E<A NAME="_Toc258262562"></A>xample: Firmware First Handling Using NMI Notification</H4>
<P CLASS="ACPINormal">
<A NAME="pgfId-1356163"></A>If the platform chooses to use NMI to report errors, which is the recommended method for uncorrected errors, the platform follows these steps:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356164"></A>System firmware configures the platform to trigger a firmware handler when the error occurs </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356165"></A>System firmware identifies the error source for which it will handle errors via the error source enumeration interface by setting the FIRMWARE_FIRST flag</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356166"></A>System firmware describes the generic error source, and the associated error status block, as described in <A HREF="ACPI_PLatform_Error_Interfaces.htm#41948" CLASS="XRef">See Generic Hardware Error Source.</A>. System firmware identifies the relation between the generic error source and the original error source by using the original source ID in the related source ID of <A HREF="ACPI_PLatform_Error_Interfaces.htm#59391" CLASS="XRef">See Generic Hardware Error Source Structure.</A>.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356167"></A>When a hardware error reported by the error source occurs, system firmware gains control and handles the error condition as required. Upon completion system firmware should do the following:</LI>
<LI CLASS="StepSubAlpha-1">
<A NAME="pgfId-1356168"></A>Extract the error information from the error source and fill in the error information in the data block of the generic error source it identified as an alternate in step 3.  The error information format follows the specification in <A HREF="ACPI_PLatform_Error_Interfaces.htm#55007" CLASS="XRef">See Generic Error Data.</A></LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356169"></A>Set the appropriate bit in the block status field (<A HREF="ACPI_PLatform_Error_Interfaces.htm#28892" CLASS="XRef">See Generic Error Status Block.</A>) to indicate to the OSPM that a valid error condition is present.  </LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356170"></A>Clears error state from the hardware.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356171"></A>Generates an NMI.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356173"></A><A NAME="_GoBack"></A>At this point, the OSPM NMI handler scans the list of generic error sources to find the error source that reported the error and processes the error report</P>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-2">
<A NAME="pgfId-1356176"></A>E<A NAME="_Toc258262563"></A>rror Serialization</H2>
<UL>
<LI CLASS="Bullet">
<A NAME="pgfId-1356177"></A>The error record serialization feature is used to save and retrieve hardware error information to and from a persistent store. OSPM interacts with the platform through a platform interface. If the Error record Serialization Table (ERST) defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#63572" CLASS="XRef">See Error Record Serialization Table (ERST).</A> is present, OSPM uses the ACPI solution described below. Otherwise, OSPM uses the UEFI runtime variable services to carry out error record persistence operations on UEFI based platforms.</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1356178"></A>For error persistence across boots, the platform must implement some form of non-volatile store to save error records. The amount of space required depends on the platform&#8217;s processor architecture. Typically, this store will be flash memory or some other form of non-volatile RAM.</LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1356179"></A>Serialized errors are encoded according to the Common Platform Error Record (CPER) format, which is described in the appendices of the UEFI Specification. These entries are referred to as error records. </LI>
<LI CLASS="Bullet">
<A NAME="pgfId-1356180"></A>The Error Record Serialization Interface is designed to be sufficiently abstract to allow hardware vendors flexibility in how they implement their error record serialization hardware. The platform provides details necessary to communicate with its serialization hardware by populating the ERST with a set of Serialization Instruction Entries. One or more serialization instruction entries comprise a Serialization Action. OSPM carries out serialization operations by executing a series of Serialization Actions. Serialization Actions and Serialization Instructions are described in detail in the following sections.</LI>
</UL>
<P CLASS="Body">
<A NAME="pgfId-1356181"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#63572" CLASS="XRef">See Error Record Serialization Table (ERST).</A> details the layout of the ERST which system firmware is responsible for building.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356182"></A><A NAME="63572"></A>Error Record Serialization Table (ERST)</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356185"></A>Field</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356187"></A>Byte Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356189"></A>Byte Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356191"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356193"></A>ACPI Standard Header</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356195"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356197"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356199"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356201"></A>Header Signature</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356203"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356205"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356207"></A>&#8220;ERST&#8221;. Signature for the Error Record Serialization Table.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356209"></A>Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356211"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356213"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356215"></A>Length, in bytes, of entire ERST. Entire table must be contiguous.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356217"></A>Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356219"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356221"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356223"></A>1</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356225"></A>Checksum</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356227"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356229"></A>9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356231"></A>Entire table must sum to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356233"></A>OEMID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356235"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356237"></A>10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356239"></A>OEM ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356241"></A>OEM Table ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356243"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356245"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356247"></A>The manufacturer model ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356249"></A>OEM Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356251"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356253"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356255"></A>OEM revision of the ERST for the supplied OEM table ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356257"></A>Creator ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356259"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356261"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356263"></A>Vendor ID of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356265"></A>Creator Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356267"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356269"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356271"></A>Revision of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356273"></A>Serialization Header</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356275"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356277"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356279"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356281"></A>Serialization Header Size</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356283"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356285"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356287"></A>Length in bytes of the serialization header.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356289"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356291"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356293"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356295"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356297"></A>Instruction Entry Count</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356299"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356301"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356303"></A>The number of Serialization Instruction Entries in the Serialization Action Table.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356305"></A>Serialization Action Table</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356307"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356309"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356311"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356313"></A>Serialization Instruction Entries</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356315"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356317"></A>48</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356319"></A>A series of error logging instruction entries.</P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1356324"></A><A NAME="98912"></A>Serialization Action Table</H4>
<P CLASS="Body">
<A NAME="pgfId-1356325"></A>A Serialization Action is defined as a series of Serialization Instructions on registers that result in a well known action. A Serialization Instruction is a Serialization Action primitive and consists of either reading or writing an abstracted hardware register. The Serialization Action Table contains Serialization Instruction Entries for all the Serialization Actions the platform supports.</P>
<P CLASS="Body">
<A NAME="pgfId-1356326"></A>In most cases, a Serialization Action comprises only one Serialization Instruction, but it is conceivable that a more complex device will require more than one Serialization Instruction. When an action does comprise more than one instruction, the instructions must be listed consecutively and they will consequently be performed sequentially, according to their placement in the Serialization Action Table.</P>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1356327"></A>Serialization Actions</H6>
<P CLASS="Body">
<A NAME="pgfId-1356328"></A>This section identifies the Serialization Actions that comprise the Error Record Serialization interface.  <A HREF="ACPI_PLatform_Error_Interfaces.htm#31515" CLASS="XRef">See Error Record Serialization Actions.</A> identifies the supported error record Serialization Actions.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356329"></A><A NAME="31515"></A>Error Record Serialization Actions</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458312"></A>Value</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458314"></A>Name</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458316"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356338"></A>0x0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356340"></A>BEGIN_WRITE_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356342"></A>Indicates to the platform that an error record write operation is beginning. This allows the platform to set its operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356344"></A>0x1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356346"></A>BEGIN_READ_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356348"></A>Indicates to the platform that an error record read operation is beginning. This allows the platform to set its operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356350"></A>0x2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356352"></A>BEGIN_CLEAR_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356354"></A>Indicates to the platform that an error record clear operation is beginning. This allows the platform to set its operation context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356356"></A>0x3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356358"></A>END_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356360"></A>Indicates to the platform that the current error record operation has ended.  This allows the platform to clear its operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356362"></A>0x4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356364"></A>SET_RECORD_OFFSET</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356366"></A>Sets the offset from the base of the Error Log Address Range to or from which the platform is to transfer an error record.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356368"></A>0x5</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356370"></A>EXECUTE_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356372"></A>Instructs the platform to carry out the current operation based on the current operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356374"></A>0x6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356376"></A>CHECK_BUSY_STATUS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356378"></A>Returns the state of the current operation.  Once an operation has been executed through the EXECUTE_OPERATION action, the platform is required to return an indication that the operation is in progress until the operation completes. This allows the OS to poll for completion by repeatedly executing the CHECK_BUSY_STATUS action until the platform indicates that the operation not busy.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356380"></A>0x7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356382"></A>GET_COMMAND_STATUS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356384"></A>Returns the status of the current operation. The platform is expected to maintain a status code for each operation. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#68350" CLASS="XRef">See Command Status Definition.</A> for a list of valid command status codes.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356386"></A>0x8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356388"></A>GET_RECORD_IDENTIFIER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356390"></A>Returns the record identifier of an existing error record on the persistent store. The error record identifier is a 64-bit unsigned value as defined in the appendices of the UEFI Specification. If the record store is empty, this action must return 0xFFFFFFFFFFFFFFFF.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356392"></A>0x9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356394"></A>SET_RECORD_IDENTIFIER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356396"></A>Sets the record identifier. The error record identifier is a 64-bit unsigned value as defined in the appendices of the UEFI Specification.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356398"></A>0xA</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356400"></A>GET_RECORD_COUNT</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356402"></A>Retrieves the number of error records currently stored on the platforms persistent store. The platform is expected to maintain a count of the number of error records resident in its persistent store.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356404"></A>0xB</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356406"></A>BEGIN_DUMMY_WRITE_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356408"></A>Indicates to the platform that a dummy error record write operation is beginning. This allows the platform to set its operational context. A dummy error record write operation performs no actual transfer of information from the Error Log Address Range to the persistent store.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356410"></A>0xC</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356412"></A><EM CLASS="Italic">
RESERVED</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356414"></A>Reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356416"></A>0xD</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356418"></A>GET_ERROR_LOG_ADDRESS_RANGE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356420"></A>Returns the 64-bit physical address OSPM uses as the buffer for reading/writing error records.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356422"></A>0xE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356424"></A>GET_ERROR_LOG_ADDRESS_RANGE_LENGTH</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356426"></A>Returns the length in bytes of the Error Log Address Range</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356428"></A>0xF</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356430"></A>GET_ERROR_LOG_ADDRESS_RANGE_ATTRIBUTES</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356432"></A>Returns attributes that describe the behavior of the error log address range.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356433"></A>Bit [0] (0x1) - Reserved.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356434"></A>Bit [1] (0x2) - Non-Volatile: Indicates that the error log address range is in non-volatile RAM.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356435"></A>Bit [2] (0x4) - Slow: Indicates that the memory in which the error log address range is locates has slow access times.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356436"></A>All other bits reserved.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1475640"></A>0x10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1475642"></A>GET_EXECUTE_OPERATION_TIMINGS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1475644"></A>Returns an encoded QWORD : [63:32] value in microseconds that the platform expects would be the maximum amount of time it will take to process and complete an EXECUTE_OPERATION. [31:0] value in microseconds that the platform expects would be the nominal amount of time it will take to process and complete an EXECUTE_OPERATION.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1356440"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#68350" CLASS="XRef">See Command Status Definition.</A> below defines the serialization action status codes returned from GET_COMMAND_STATUS.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356441"></A><A NAME="68350"></A>Command Status Definition</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356444"></A>Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356446"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356448"></A>0x00</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356450"></A>Success</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356452"></A>0x01</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356454"></A>Not Enough Space</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356456"></A>0x02</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356458"></A>Hardware Not Available</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356460"></A>0x03</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356462"></A>Failed</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356464"></A>0x04</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356466"></A>Record Store Empty</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356468"></A>0x05</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356470"></A>Record Not Found</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1356473"></A>Serialization Instruction Entries</H6>
<P CLASS="Body">
<A NAME="pgfId-1356474"></A>Each Serialization Action consists of a series of one or more Serialization Instructions.  A Serialization Instruction represents a primitive operation on an abstracted hardware register represented by the register region as defined in a Serialization Instruction Entry.</P>
<P CLASS="Body">
<A NAME="pgfId-1356475"></A>A Serialization Instruction Entry describes a region in a serialization hardware register and the serialization instruction to be performed on that region. <A HREF="ACPI_PLatform_Error_Interfaces.htm#82542" CLASS="XRef">See Serialization Instruction Entry.</A> details the layout of a Serialization Instruction Entry.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356476"></A><A NAME="82542"></A>Serialization Instruction Entry</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458326"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458328"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458330"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458332"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356487"></A>Serialization Action</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356489"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356491"></A>N+0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356493"></A>The serialization action that this serialization instruction is a part of.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356495"></A>Instruction</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356497"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356499"></A>N+1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356501"></A>Identifies the instruction to execute. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#16911" CLASS="XRef">See Serialization Instructions.</A> for a list of valid serialization instructions.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356503"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356505"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356507"></A>N+2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356509"></A>Flags that qualify the instruction.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356511"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356513"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356515"></A>N+3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356517"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356519"></A>Register Region</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356521"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356523"></A>N+4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356525"></A>Generic Address Structure as defined in <A HREF="ACPI_Software_Programming_Model.htm#_Ref42578254" CLASS="XRef">See Generic Address Structure.</A> to describe the address and bit.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356527"></A>Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356529"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356531"></A>N+16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356533"></A>Value used with READ_REGISTER_VALUE and WRITE_REGISTER_VALUE instructions.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356535"></A>Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356537"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356539"></A>N+24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356541"></A>The bit mask required to obtain the bits corresponding to the serialization instruction in a given bit range defined by the register region.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1356544"></A>Register Region is described as a generic address structure.  This structure describes the physical address of a register as well as the bit range that corresponds to a desired region of the register.  The bit range is defined as the smallest set of consecutive bits that contains every bit in the register that is associated with the Serialization Instruction.  If bits [6:5] and bits [3:2] all correspond to a Serialization Instruction, the bit range for that instruction would be [6:2].</P>
<P CLASS="Body">
<A NAME="pgfId-1356545"></A>Because a bit range could contain bits that do not pertain to a particular Serialization Instruction (i.e. bit 4 in the example above), a bit mask is required to distinguish all the bits in the region that correspond to the instruction.  The Mask field is defined to be this bit mask with a bit set to &#8216;1&#8217; for each bit in the bit range (defined by the register region) corresponding to the Serialization Instruction.  Note that bit 0 of the bit mask corresponds to the lowest bit in the bit range.  In the example used above, the mask would be 11011b or 0x1B.</P>
<P CLASS="Body">
<A NAME="pgfId-1356546"></A>The Instruction field identifies the operation to be performed on the register region by the instruction entry.  <A HREF="ACPI_PLatform_Error_Interfaces.htm#16911" CLASS="XRef">See Serialization Instructions.</A> identifies the instructions that are supported.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356547"></A><A NAME="16911"></A>Serialization Instructions</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458344"></A>Value</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458346"></A>Name</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458348"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356556"></A>0x00</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356558"></A>READ_REGISTER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356560"></A>A READ_REGISTER instruction reads the designated information from the specified Register Region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356562"></A>0x01</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356564"></A>READ_REGISTER_VALUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356566"></A>A READ_REGISTER_VALUE instruction reads the designated information from the specified Register Region and compares the results with the contents of the Value field.  If the information read matches the contents of the Value field, TRUE is returned, else FALSE is returned.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356568"></A>0x02</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356570"></A>WRITE_REGISTER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356572"></A>A WRITE_REGISTER instruction writes a value to the specified Register Region.  The Value field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356574"></A>0x03</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356576"></A>WRITE_REGISTER_VALUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356578"></A>A WRITE_REGISTER_VALUE instruction writes the contents of the Value field to the specified Register Region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356580"></A>0x04</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356582"></A>NOOP</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356584"></A>This instruction is a NOOP.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356586"></A>0x05</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356588"></A>LOAD_VAR1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356590"></A>Loads the VAR1 variable from the register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356592"></A>0x06</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356594"></A>LOAD_VAR2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356596"></A>Loads the VAR2 variable from the register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356598"></A>0x07</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356600"></A>STORE_VAR1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356602"></A>Stores the value in VAR1 to the indicate register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356604"></A>0x08</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356606"></A>ADD</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356608"></A>Adds VAR1 and VAR2 and stores the result in VAR1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356610"></A>0x09</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356612"></A>SUBTRACT</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356614"></A>Subtracts VAR1 from VAR2 and stores the result in VAR1.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356616"></A>0x0A</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356618"></A>ADD_VALUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356620"></A>Adds the contents of the specified register region to Value and stores the result in the register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356622"></A>0x0B</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356624"></A>SUBTRACT_VALUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356626"></A>Subtracts Value from the contents of the specified register region and stores the result in the register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356628"></A>0x0C</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356630"></A>STALL</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356632"></A>Stall for the number of microseconds specified in Value.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356634"></A>0x0D</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356636"></A>STALL_WHILE_TRUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356638"></A>OSPM continually compares the contents of the specified register region to Value until the values are not equal. OSPM stalls between each successive comparison. The amount of time to stall is specified by VAR1 and is expressed in microseconds.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356640"></A>0x0E</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356642"></A>SKIP_NEXT_INSTRUCTION_IF_TRUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356644"></A>This is a control instruction which compares the contents of the register region with Value. If the values match, OSPM skips the next instruction in the sequence for the current action.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356646"></A>0x0F</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356648"></A>GOTO</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356650"></A>OSPM will go to the instruction specified by Value.  The instruction is specified as the zero-based index.  Each instruction for a given action has an index based on its relative position in the array of instructions for the action.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356652"></A>0x10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356654"></A>SET_SRC_ADDRESS_BASE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356656"></A>Sets the SRC_BASE variable used by the MOVE_DATA instruction to the contents of the register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356658"></A>0x11</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356660"></A>SET_DST_ADDRESS_BASE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356662"></A>Sets the DST_BASE variable used by the MOVE_DATA instruction to the contents of the register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356664"></A>0x12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356666"></A>MOVE_DATA</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356668"></A>Moves VAR2 bytes of data from SRC_BASE + Offset to DST_BASE + Offset, where Offset is the contents of the register region.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1356672"></A>The Flags field allows qualifying flags to be associated with the instruction.  <A HREF="ACPI_PLatform_Error_Interfaces.htm#61091" CLASS="XRef">See Instruction Flags.</A> identifies the flags that can be associated with Serialization Instructions.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356673"></A><A NAME="61091"></A>Instruction Flags</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356676"></A>Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356678"></A>Name</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356680"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356682"></A>0x01</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356684"></A>PRESERVE_REGISTER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356686"></A>For WRITE_REGISTER and WRITE_REGISTER_VALUE instructions, this flag indicates that bits within the register that are not being written must be preserved rather than destroyed.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1356687"></A>For READ_REGISTER instructions, this flag is ignored.</P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356691"></A>READ_REGISTER_VALUE </H6>
<P CLASS="Body">
<A NAME="pgfId-1358766"></A>A read register value instruction reads the register region and compares the result with the specified value. If the values are not equal, the instruction failed. This can be described in pseudo code as follows:</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356693"></A>&nbsp;</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467723"></A>X = Read(register)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356694"></A>X = X &gt;&gt; Bit Offset described in Register Region </P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356695"></A>X = X &amp; Mask</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356696"></A>If (X != Value) FAIL</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356697"></A>SUCCEED</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467734"></A>&nbsp;</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356699"></A>READ_REGISTER </H6>
<P CLASS="Body">
<A NAME="pgfId-1358773"></A>A read register instruction reads the register region. The result is a generic value and should not be compared with Value. Value will be ignored. This can be described in pseudo code as follows:</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356701"></A>&nbsp;</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467741"></A>X = Read(register)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356702"></A>X = X &gt;&gt; Bit Offset described in Register Region </P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356703"></A>X = X &amp; Mask</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356704"></A>Return X</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467748"></A>&nbsp;</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356706"></A>WRITE_REGISTER_VALUE </H6>
<P CLASS="Body">
<A NAME="pgfId-1358782"></A>A write register value instruction writes the specified value to the register region. If PRESERVE_REGISTER is set in Instruction Flags, then the bits not corresponding to the write value instruction are preserved. If the register is preserved, the write value instruction requires a read of the register. This can be described in pseudo code as follows:</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356708"></A>&nbsp;</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467755"></A>X = Value &amp; Mask</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356709"></A>X = X &lt;&lt; Bit Offset described in Register Region</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356710"></A>If (Preserve Register) </P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356711"></A>	Y = Read(register)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356712"></A>	Y = Y &amp; &#126;(Mask &lt;&lt; Bit Offset)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356713"></A>	X = X | Y</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356714"></A>Write(X, Register)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467762"></A>&nbsp;</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356716"></A>WRITE_REGISTER </H6>
<P CLASS="Body">
<A NAME="pgfId-1358789"></A>A write register instruction writes a value to the register region. Value will be ignored. If PRESERVE_REGISTER is set in Instruction Flags, then the bits not corresponding to the write instruction are preserved. If the register is preserved, the write value instruction requires a read of the register. This can be described in pseudo code as follows:</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356718"></A>&nbsp;</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1467769"></A>X = supplied value</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356719"></A>X = X &amp; Mask</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356720"></A>X = X &lt;&lt; Bit Offset described in Register Region</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356721"></A>If (Preserve Register) </P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356722"></A>	Y = Read(register)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356723"></A>	Y = Y &amp; &#126;(Mask &lt;&lt; Bit Offset)</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356724"></A>	X = X | Y</P>
<P CLASS="CodeExample">
<A NAME="pgfId-1356725"></A>Write(X, Register)</P>
</DIV>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1356726"></A>Error Record Serialization Information</H6>
<P CLASS="Body">
<A NAME="pgfId-1356727"></A>The APEI error record includes an 8 byte field called OSPM Reserved.  <A HREF="ACPI_PLatform_Error_Interfaces.htm#53760" CLASS="XRef">See Error Record Serialization Info.</A>  defines the layout of this field.  The error record serialization information is a small buffer the platform can use for serialization bookkeeping.  The platform is free to use the 48 bits starting at bit offset 16 for its own purposes.  It may use these bits to indicate the busy/free status of an error record, to record an internal identifier, etc. </P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1356728"></A><A NAME="53760"></A>Error Record Serialization Info</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356731"></A>Field</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356733"></A>Bit Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356735"></A>Bit Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1356737"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356739"></A>Signature</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356741"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356743"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356745"></A>16-bit signature (&#8216;ER&#8217;) identifying the start of the error record serialization data.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356747"></A>Platform Serialization Data</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356749"></A>48</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356751"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1356753"></A>Platform private error record serialization information.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1356758"></A>Operations</H4>
<P CLASS="Body">
<A NAME="pgfId-1356759"></A>The error record serialization interface comprises three operations: Write, Read, and Clear. OSPM uses the Write operation to write a single error record to the persistent store.  The Read operation is used to retrieve a single error record previously recorded to the persistent store using the write operation. The Clear operation allows OSPM to notify the platform that a given error record has been fully processed and is no longer needed, allowing the platform to recover the storage associated with a cleared error record.</P>
<P CLASS="Body">
<A NAME="pgfId-1470670"></A>Where the Error Log Address Range is NVRAM, significant optimizations are possible since transfer from the Error Log Address Range to a separate storage device is unnecessary. The platform may still, however, copy the record from NVRAM to another device, should it choose to. This allows, for example, the platform to copy error records to private log files.  In order to give the platform the opportunity to do this, OSPM must use the Write operation to persist error records even when the Error Log Address Range is NVRAM. The Read and Clear operations, however, are unnecessary in this case as OSPM is capable of reading and clearing error records without assistance from the platform.</P>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1470671"></A><A NAME="44196"></A>Writing</H6>
<P CLASS="Body">
<A NAME="pgfId-1470672"></A>To write a single HW error record, OSPM executes the following steps:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356763"></A>Initializes the error record&#8217;s serialization info. OSPM must fill in the Signature.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356764"></A>Writes the error record to be persisted into the Error Log Address Range.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356766"></A>Executes the BEGIN_WRITE_OPERATION action to notify the platform that a record write operation is beginning.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356767"></A>Executes the SET_RECORD_OFFSET action to inform the platform where in the </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356768"></A>Error Log Address Range the error record resides.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356769"></A>Executes the EXECUTE_OPERATION action to instruct the platform to begin the write operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356770"></A>Busy waits by continually executing CHECK_BUSY_STATUS action until FALSE is returned.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356771"></A>Executes a GET_COMMAND_STATUS action to determine the status of the write operation.  If an error is indicated, the OS</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356772"></A>PM may retry the operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356773"></A>Executes an END_OPERATION action to notify the platform that the record write operation is complete.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356775"></A>When OSPM performs the EXECUTE_OPERATION action in the context of a record write operation, the platform attempts to transfer the error record from the designated offset in the Error Log Address Range to a persistent store of its choice.  If the Error Log Address Range is non-volatile RAM, no transfer is required.</P>
<P CLASS="Body">
<A NAME="pgfId-1356776"></A>Where the platform is required to transfer the error record from the Error Log Address Range to a persistent store, it performs the following steps in response to receiving a write command:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356777"></A>Sets some internal state to indicate that it is busy. OSPM polls by executing a CHECK_BUSY_STATUS action until the operation is completed.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356778"></A>Reads the error record&#8217;s </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356779"></A>Record ID field to determine where on the storage medium the supplied error record is to be written. The platform attempts to locate the specified error record on the persistent store.</LI>
<LI CLASS="StepSubAlpha-1">
<A NAME="pgfId-1356780"></A>If the specified error record does not exist, the platform attempts to write a new record to the persistent store.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356781"></A>If the specified error record does exists, then if the existing error record is large enough to be overwritten by the supplied error record, the platform can do an in-place replacement.  If the existing record is not large enough to be overwritten, the platform must attempt to locate space in which to write the new record. It may mark the existing record as Free and coalesce adjacent free records in order to create the necessary space.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356783"></A>Transfers the error record to the selected location on the persistent store.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356784"></A>Updates an internal </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356785"></A>Record Count if a new record was written.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356786"></A>Records the status of the operation so OSPM can retrieve the status by executing a GET_COMMAND_STATUS action.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356788"></A>Modifies internal busy state as necessary so when OS</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356789"></A>PM executes CHECK_BUSY_STATUS, the result indicates that the operation is complete.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356791"></A>If the Error Log Address Range resides in NVRAM, the minimum steps required of the platform are:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356792"></A>Sets some internal state to indication that it is busy. OSPM polls by executing a CHECK_BUSY_STATUS action until the operation is completed.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356793"></A>Records the status of the o</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356794"></A>peration so OSPM can retrieve the status by executing a GET_COMMAND_STATUS action.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356795"></A>Clear internal busy state so when OS</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356796"></A>PM executes CHECK_BUSY_STATUS, the result indicates that the operation is complete.</LI>
</OL>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1356797"></A>   Reading</H6>
<P CLASS="Body">
<A NAME="pgfId-1356798"></A>During boot, OSPM attempts to retrieve all serialized error records from the persistent store. If the Error Log Address Range does not reside in NVRAM, the following steps are executed by OSPM to retrieve all error records:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356799"></A>Executes the BEGIN_ READ_OPERATION action to notify the platform that a record read operation is beginning.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356800"></A>Executes the SET_ RECORD_OFFSET action to inform the platform at what offset in the Error Log Address Range the error record is to be transferred.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356802"></A>Executes the SET_RECORD_IDENTIFER action to inform the platform which error record is to be read from its persistent store.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356803"></A>Executes the EXECUTE_OPERATION action to instruct the platform to begin the read operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356804"></A>Busy waits by continually executing CHECK_BUSY_STATUS action until FALSE is returned.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356805"></A>Executes a GET_COMMAND_STATUS action to determine the status of the read operation.</LI>
<LI CLASS="StepSubAlpha-1">
<A NAME="pgfId-1356806"></A>If the status is Record Store Empty (0x04), continue to step 7.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356807"></A>If an error occurred reading a valid error record, the status will be Failed (0x03), continue to step 7.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356809"></A>If the status is Record Not Found (0x05), indicating that the specified error record does not exist, OSPM retrieves a valid identifier by executing a GET_RECORD_IDENTIFIER action. The platform will return a valid record identifier.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356811"></A>If the status is Success, OSPM transfers the retrieved record from the Error Log Address Range to a private buffer and then executes the GET_RECORD_IDENTIFIER action to determine the identifier of the next record in the persistent store.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356813"></A>Execute an END_OPERATION to notify the platform that the record read operation is complete.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356815"></A>The steps performed by the platform to carry out a read request are as follows:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356816"></A>Sets some internal state to indicate that it is busy. OSPM polls by executing a CHECK_BUSY_STATUS action until the operation is completed.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356817"></A>Using the record identifier supplied by OSPM through the SET_RECORD_IDENTIFIER operation, determine which error record to read:</LI>
<LI CLASS="StepSubAlpha-1">
<A NAME="pgfId-1356819"></A>If the identifier is 0x0 (unspecified), the platform reads the &#8216;first&#8217; error record from its persistent store.  First, in this is implementation specific.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356820"></A>If the identifier is non-zero, the platform attempts to locate the specified error record on the persistent store.</LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356821"></A>If the specified error record does not exist, set the status register&#8217;s </LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1356822"></A>Status to Record Not Found (0x05), and update the status register&#8217;s Identifier field with the identifier of the &#8216;first&#8217; error record. </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356823"></A>Transfer the record from the persistent store to the offset specified by OSPM from the base of the Error Log Address Range.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356824"></A>Record the Identifier of the &#8216;next&#8217; valid error record that resides on the persistent store.  This allows OSPM to retrieve a valid record identifier by executing a GET_RECORD_IDENTIFIER operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356826"></A>Record the status of the operation so OSPM can retrieve the status by executing a GET_COMMAND_STATUS action.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356828"></A>Clear internal busy state so when OSPM executes CHECK_BUSY_STATUS, the result indicates that the operation is complete.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356830"></A>Where the Error Log Address Range does reside in NVRAM, OSPM requires no platform support to read persisted error records. OSPM can scan the Error Log Address Range on its own and retrieve the error records it previously persisted.</P>
</DIV>
<DIV>
<H6 CLASS="Heading-4">
<A NAME="pgfId-1356831"></A>   Clearing</H6>
<P CLASS="Body">
<A NAME="pgfId-1356832"></A>After OSPM has finished processing an error record, it will notify the platform by clearing the record. This allows the platform to delete the record from the persistent store or mark it such that the space is free and can be reused. The following steps are executed by OSPM to clear an error record:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356833"></A>Executes a BEGIN_ CLEAR_OPERATION action to notify the platform that a record clear operation is beginning.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356834"></A>Executes a SET_RECORD_IDENTIFER action to inform the platform which error record is to be cleared.  This value must not be set to 0x0 (unspecified).</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356835"></A>Executes an EXECUTE_OPERATION action to instruct the platform to begin the clear operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356836"></A>Busy waits by continually executing CHECK_BUSY_STATUS action until FALSE is returned.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356837"></A>Executes a GET_COMMAND_STATUS action to determine the status of the clear operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356838"></A>Execute an END_OPERATION to notify the platform that the record read operation is complete.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356840"></A>The platform carries out a clear request by performing the following steps:</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1356841"></A>Sets some internal state to indication that it is busy. OSPM polls by executing a CHECK_BUSY_STATUS action until the operation is completed.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356842"></A>Using the record identifier supplied by OSPM through the SET_RECORD_IDENTIFIER operation, determine which error record to clear. This value may not be 0x0 (unspecified).</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356844"></A>Locate the specified error record on the persistent store.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356845"></A>Mark the record as free by updating the Attributes in its serialization header.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356846"></A>Update internal record count.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356847"></A>Clear internal busy state so when OS</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1356848"></A>PM executes CHECK_BUSY_STATUS, the result indicates that the operation is complete.</LI>
</OL>
<P CLASS="Body">
<A NAME="pgfId-1356849"></A>When the Error Log Address Range resides in NVRAM, the OS requires no platform support to Clear error records.</P>
</DIV>
</DIV>
<DIV>
<H3 CLASS="ACPIHeading-4">
<A NAME="pgfId-1356850"></A>   Usage</H3>
<P CLASS="Body">
<A NAME="pgfId-1356851"></A>This section describes several possible ways the error record serialization mechanism might be implemented. </P>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356852"></A>   Error Log Address Range Resides in NVRAM</H6>
<P CLASS="Body">
<A NAME="pgfId-1356853"></A>If the Error Log Address Range resides in NVRAM, then when OSPM writes a record into the logging range, the record is automatically persistent and the busy bit can be cleared immediately. On a subsequent boot, OSPM can read any persisted error records directly from the persistent store range. The size of the persistent store, in this case, is expected to be enough for several error records.</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356854"></A>   Error Log Address Range Resides in (volatile) RAM</H6>
<P CLASS="Body">
<A NAME="pgfId-1356855"></A>In this implementation, the Error Log Address Range describes an intermediate location for error records.  To persist a record, OSPM copies the record into the Error Log Address Range and sets the Execute, at which time the platform runs necessary code (SMM code on non-UEFI based systems and UEFI runtime code on UEFI-enabled systems) to transfer the error record from main memory to some persistent store. To read a record, OSPM asks the platform to copy a record from the persistent store to a specified offset within the Error Log Address Range. The size of the Error Log Address Range is at least large enough for one error record.</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356856"></A>   Error Log Address Range Resides on Service Processor</H6>
<P CLASS="Body">
<A NAME="pgfId-1356857"></A>In this type of implementation, the Error Log Address Range is really MMIO. When OSPM writes an error record to the Error Log Address Range, it is really writing to memory on a service processor. When the OSPM sets the Execute control bit, the platform knows that the OSPM is done writing the record and can do something with it, like move it into a permanent location (i.e. hard disk) on the service processor. The size of the persistent store in this type of implementation is typically large enough for one error record.</P>
</DIV>
<DIV>
<H6 CLASS="Heading-5">
<A NAME="pgfId-1356858"></A>   Error Log Address Range is Copied Across Network</H6>
<P CLASS="Body">
<A NAME="pgfId-1356859"></A>In this type of implementation, the Error Log Address Range is an intermediate cache for error records. To persist an error record, OSPM copies the record into the Error Log Address Range and set the Execute control bit, and the platform runs code to transmit this error record over the wire. The size of the Error Log Address Range in this type of implementation is typically large enough for one error record.</P>
</DIV>
</DIV>
</DIV>
<DIV>
<H2 CLASS="Heading-2">
<A NAME="pgfId-1356862"></A>E<A NAME="_Toc258262566"></A>rror Injection</H2>
<P CLASS="Body">
<A NAME="pgfId-1356863"></A>This section outlines an ACPI table mechanism, called EINJ, which allows for a generic interface mechanism through which OSPM can inject hardware errors to the platform without requiring platform specific OSPM level software. The primary goal of this mechanism is to support testing of OSPM error handling stack by enabling the injection of hardware errors. Through this capability OSPM is able to implement a simple interface for diagnostic and validation of errors handling on the system.  </P>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1356866"></A>E<A NAME="_Toc258262567"></A>rror Injection Table (EINJ)</H4>
<P CLASS="Body">
<A NAME="pgfId-1469886"></A>The Error Injection Table provides a generic interface mechanism through which OSPM can inject hardware errors to the platform without requiring platform specific OSPM software. System firmware is responsible for building this table, which is made up of Injection Instruction entries. <A HREF="ACPI_PLatform_Error_Interfaces.htm#10057" CLASS="XRef">See Error Injection Table (EINJ).</A> details the layout of the table. </P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1470036"></A><A NAME="10057"></A>Error Injection Table (EINJ)</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469893"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469895"></A>Byte length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469897"></A>Byte offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469899"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469901"></A>ACPI Standard Header</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469903"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469905"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469907"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469909"></A>Header Signature</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469911"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469913"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469915"></A>EINJ. Signature for the Error Record Injection Table.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469917"></A>Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469919"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469921"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469923"></A>Length, in bytes, of entire EINJ. Entire table must be contiguous.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469925"></A>Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469927"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469929"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469931"></A>1</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469933"></A>Checksum</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469935"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469937"></A>9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469939"></A>Entire table must sum to zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469941"></A>OEMID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469943"></A>6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469945"></A>10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469947"></A>OEM ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469949"></A>OEM Table ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469951"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469953"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469955"></A>The manufacturer model ID.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469957"></A>OEM Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469959"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469961"></A>24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469963"></A>OEM revision of EINJ.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469965"></A>Creator ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469967"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469969"></A>28</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469971"></A>Vendor ID of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469973"></A>Creator Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469975"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469977"></A>32</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469979"></A>Revision of the utility that created the table. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469981"></A>Injection Header</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469983"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469985"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1469987"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469989"></A>Injection Header Size</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469991"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469993"></A>36</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469995"></A>Length in bytes of the Injection Interface header.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469997"></A>Injection Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1469999"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470001"></A>40</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470003"></A>Reserved. Must be zero</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470005"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470007"></A>3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470009"></A>41</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470011"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470013"></A>Injection Entry Count</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470015"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470017"></A>44</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470019"></A>The number of Instruction Entries in the Injection Action Table</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470021"></A>Injection Action Table</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470023"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470025"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470027"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470029"></A>Injection Instruction Entries</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470031"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470033"></A>48</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470035"></A>A series of error injection instruction entries</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1470040"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#86632" CLASS="XRef">See Error Injection Actions.</A> identifies the supported error injection actions.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1470126"></A><A NAME="86632"></A>Error Injection Actions</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470044"></A>Value</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470046"></A>Name</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470048"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470050"></A>0x0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470052"></A>BEGIN_INJECTION_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470054"></A>Indicates to the platform that an error injection is beginning. This allows the platform to set its operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470056"></A>0x1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470058"></A>GET_TRIGGER_ERROR_ACTION_TABLE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470060"></A>Returns a 64-bit physical memory pointer to the TRIGGER_ERROR action table. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470061"></A>The TRIGGER_ERROR action instructions when executed by software trigger the error that was injected by the immediately prior SET_ERROR_TYPE action.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470063"></A>0x2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470065"></A>SET_ERROR_TYPE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470067"></A>Type of error to Inject. Only one ERROR_TYPE can be injected at any given time. If there is request for multiple injections at the same time, then the platform will return an error condition.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470069"></A>0x3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470071"></A>GET_ERROR_TYPE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470073"></A>Returns the error injection capabilities of the platform.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470075"></A>0x4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470077"></A>END_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470079"></A>Indicates to the platform that the current injection operation has ended. This allows the platform to clear its operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470081"></A>0x5</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470083"></A>EXECUTE_OPERATION</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470085"></A>Instructs the platform to carry out the current operation based on the current operational context.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470087"></A>0x6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470089"></A>CHECK_BUSY_STATUS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470091"></A>Returns the state of the current operation.  </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470092"></A>Once an operation has been executed through the EXECUTE_OPERATION action, the platform is required to return an indication that the operation is busy until the operation is completed. This allows software to poll for completion by repeatedly executing the CHECK_BUSY_STATUS action until the platform indicates that the operation is complete by setting not busy. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470093"></A>The lower most bit (bit0) of the returned value indicates the busy status by setting it to 1 and not busy status by setting it to 0.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470095"></A>0x7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470097"></A>GET_COMMAND_STATUS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470099"></A>Returns the status of the current operation.  </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470100"></A>The platform is expected to maintain a status code for each operation. Bits [8:1] of the returned value indicate the command status. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#85937" CLASS="XRef">See Command Status Definition.</A> for a list of valid command status codes.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470105"></A>0x8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470107"></A>SET_ERROR_TYPE_WITH_ADDRESS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470109"></A>Type of error to Inject, and the address to inject. Only one Error type can be injected at any given time. If there is request for multiple injections at the same time, then the platform will return an error condition.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470110"></A>Both this Action and the SET_ERROR_TYPE action will be present as part of this EINJ action table. OSPM is free to choose either of these two actions to inject an error. The platform will give precedence to SET_ERROR_TYPE_WITH_ADDRESS. In other words, if a non-zero value is set using SET_ERROR_TYPE_WITH_ADDRESS, then any error type value set by SET_ERROR_TYPE will be ignored. If, on the other hand, if no error type is specified using SET_ERROR_TYPE_WITH_ADDRESS, then the platform will use SET_ERROR_TYPE to identify the error type to inject. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470114"></A>The RegisterRegion field (See<A HREF="ACPI_PLatform_Error_Interfaces.htm#48042" CLASS="XRef">See Injection Instruction Entry.</A>) in SET_ERROR_TYPE_WITH_ADDRESS points to a data structure whose format is defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#67486" CLASS="XRef">See SET_ERROR_TYPE_WITH_ADDRESS Data Structure.</A>.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470118"></A>Note that calling set error type with address without specifying address has the same behavior as calling SET_ERROR_TYPE.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474156"></A>0x9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474158"></A>GET_EXECUTE_OPERATION_TIMINGS</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1474160"></A>Returns an encoded QWORD : [63:32] value in microseconds that the platform expects would be the maximum amount of time it will take to process and complete an EXECUTE_OPERATION. [31:0] value in microseconds that the platform expects would be the nominal amount of time it will take to process and complete an EXECUTE_OPERATION.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470120"></A>0xFF</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470122"></A>TRIGGER_ERROR</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470124"></A>This is not a true error injection action. In response to error injection, the platform returns a trigger error action table. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1470125"></A>This table consists of a series of injection instruction entries where the injection action is set to TRIGGER_ERROR to distinguish such entries.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1470127"></A><A NAME="14899"></A>Injection Instruction Entries</H4>
<P CLASS="Body">
<A NAME="pgfId-1470128"></A>An Injection action consists of a series of one or more Injection Instructions. An Injection Instruction represents a primitive operation on an abstracted hardware register, represented by the register region as defined in an Injection Instruction Entry.</P>
<P CLASS="Body">
<A NAME="pgfId-1470129"></A>An Injection Instruction Entry describes a region in an injection hardware register and the injection instruction to be performed on that region.</P>
<P CLASS="Body">
<A NAME="pgfId-1470135"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#48042" CLASS="XRef">See Injection Instruction Entry.</A> details the layout of an Injection Instruction Entry.<A NAME="_Ref141165303"></A><A NAME="_Toc182018523"></A></P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1470206"></A><A NAME="48042"></A>Injection Instruction Entry</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470139"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470141"></A>Byte length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470143"></A>Byte offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470145"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470147"></A>Injection Action</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470149"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470151"></A>N+0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470153"></A>The injection action that this instruction is a part of. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#86632" CLASS="XRef">See Error Injection Actions.</A> for supported injection actions.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470155"></A>Instruction</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470157"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470159"></A>N+1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470161"></A>Identifies the instruction to execute. <BR>
See <A HREF="ACPI_PLatform_Error_Interfaces.htm#32104" CLASS="XRef">See Injection Instructions.</A> for a list of valid instructions.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470163"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470165"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470167"></A>N+2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470169"></A>Flags that qualify the instruction.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470171"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470173"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470175"></A>N+3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470177"></A>Must be zero.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470179"></A>Register Region</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470181"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470183"></A>N+4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470188"></A>Generic Address Structure as defined in <A HREF="ACPI_Software_Programming_Model.htm#_Ref42578254" CLASS="XRef">See Generic Address Structure.</A> to describe the address and bit.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470189"></A>Address_Space_ID must be 0 (System Memory) or 1 (System IO). This constraint is an attempt to ensure that the registers are accessible in the presence of hardware error conditions.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470191"></A>Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470193"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470195"></A>N+16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470197"></A>This is the value field that is used by the instruction READ or WRITE_REGISTER_VALUE.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470199"></A>Mask</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470201"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470203"></A>N+24</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470205"></A>The bit mask required to obtain the bits corresponding to the injection instruction in a given bit range defined by the register region.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1470207"></A>Register Region is described as a generic address structure. This structure describes the physical address of a register as well as the bit range that corresponds to a desired region of the register. The bit range is defined as the smallest set of consecutive bits that contains every bit in the register that is associated with the injection Instruction.  If bits [6:5] and bits [3:2] all correspond to an Injection Instruction, the bit range for that instruction would be [6:2].</P>
<P CLASS="Body">
<A NAME="pgfId-1470208"></A>Because a bit range could contain bits that do not pertain to a particular injection Instruction (i.e. bit 4 in the example above), a bit mask is required to distinguish all the bits in the region that correspond to the instruction. The Mask field is defined to be this bit mask with a bit set to a &#8216;1&#8217; for each bit in the bit range (defined by the register region) corresponding to the Injection Instruction. Note that bit 0 of the bit mask corresponds to the lowest bit in the bit range. In the example used above, the mask would be 11011b or 0x1B.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1470226"></A>Instruction Flags</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470214"></A>Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470216"></A>Name</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470218"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470220"></A>0x01</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470222"></A>PRESERVE_REGISTER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470224"></A>For WRITE_REGISTER and WRITE_REGISTER_VALUE instructions, this flag indicates that bits within the register that are not being written must be preserved rather than destroyed.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470225"></A>For READ_REGISTER instructions, this flag is ignored.</P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1470227"></A>Injection Instructions</H4>
<P CLASS="Body">
<A NAME="pgfId-1470231"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#32104" CLASS="XRef">See Injection Instructions.</A> lists the supported Injection Instructions for Injection Instruction Entries.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1357188"></A><A NAME="32104"></A>Injection Instructions</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1467822"></A>Opcode</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1467824"></A>Instruction name</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1467826"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357197"></A>0x00</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357199"></A>READ_REGISTER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357201"></A>A READ_REGISTER instruction reads the value from the specified register region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357203"></A>0x01</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357205"></A>READ_REGISTER_VALUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357207"></A>A READ_REGISTER_VALUE instruction reads the designated information from the specified Register Region and compares the results with the contents of the Value field.  </P>
<P CLASS="TableBody">
<A NAME="pgfId-1357208"></A>If the information read matches the contents of the Value field, TRUE is returned, else FALSE is returned.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357210"></A>0x02</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357212"></A>WRITE_REGISTER</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357214"></A>A WRITE_REGISTER instruction writes a value to the specified Register Region.  The Value field is ignored.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357216"></A>0x03</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357218"></A>WRITE_REGISTER_VALUE</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357220"></A>A WRITE_REGISTER_VALUE instruction writes the contents of the Value field to the specified Register Region.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357222"></A>0x04</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357224"></A>NOOP</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357226"></A>No operation.</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1357230"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#85937" CLASS="XRef">See Command Status Definition.</A> below defines the error injection status codes returned from GET_COMMAND_STATUS.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1357231"></A><A NAME="85937"></A>Command Status Definition</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357234"></A>Value</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357236"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357238"></A>0x0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357240"></A>Success</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357242"></A>0x1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357244"></A>Unknown Failure</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357246"></A>0x2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357248"></A>Invalid Access</P>
</TD>
</TR>
</TABLE>
<P CLASS="Body">
<A NAME="pgfId-1357252"></A><A HREF="ACPI_PLatform_Error_Interfaces.htm#18011" CLASS="XRef">See Error Type Definition.</A> below defines the error type codes returned from GET_ERROR_TYPE.</P>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1357253"></A><A NAME="18011"></A>Error Type Definition</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458391"></A>Bit</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1458393"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357260"></A> 0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357262"></A>Processor Correctable</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357264"></A> 1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357266"></A>Processor Uncorrectable non-fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357268"></A> 2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357270"></A>Processor Uncorrectable fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357272"></A> 3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357274"></A>Memory Correctable</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357276"></A> 4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357278"></A>Memory Uncorrectable non-fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357280"></A> 5</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357282"></A>Memory Uncorrectable fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357284"></A> 6</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357286"></A>PCI Express Correctable</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357288"></A> 7</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357290"></A>PCI Express Uncorrectable non-fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357292"></A> 8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357294"></A>PCI Express Uncorrectable fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357296"></A> 9</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357298"></A>Platform Correctable</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357300"></A> 10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357302"></A>Platform Uncorrectable non-fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357304"></A> 11</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357306"></A>Platform Uncorrectable fatal</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470341"></A> 12:30</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470343"></A>RESERVED</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470345"></A> 31</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470347"></A>Vendor Defined Error Type. If this bit is set, then the Error types and related data structures are defined by the Vendor, as shown in <A HREF="ACPI_PLatform_Error_Interfaces.htm#18164" CLASS="XRef">See Vendor Error Type Extension Structure.</A>.</P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1470331"></A><A NAME="67486"></A>SET_ERROR_TYPE_WITH_ADDRESS Data Structure</H6>
<TABLE BORDER="1">
<TR>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470895"></A>Field</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470897"></A>Byte Length</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470899"></A>Byte Offset</P>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1470901"></A>Description</P>
</TH>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470252"></A>Error Type</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470254"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470256"></A>0x0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470258"></A>Bit map of error types to inject. Refer <A HREF="ACPI_PLatform_Error_Interfaces.htm#18011" CLASS="XRef">See Error Type Definition.</A>. This field is cleared by the platform once it is consumed. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1475627"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470260"></A>Vendor Error Type Extension Structure Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470262"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470264"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470266"></A>Specifies the offset from the beginning of the table to the vendor error type extension structure. If no vendor error type extension is present, bit31 in error type must be clear and this field must be set to 0.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1475624"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470268"></A>Flags</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470270"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470272"></A>0x8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470274"></A>Bit [0] - Processor Identification Field Valid</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470275"></A>Bit [1 ]- Memory Address and Memory address Mask Field Valid</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470276"></A>Bit [2] - PCIe SBDF field valid</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470277"></A>Bit [31:3] - RESERVED</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470278"></A>&nbsp;</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470279"></A>This field is cleared by the platform once it is consumed. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="4">
<P CLASS="TableBody">
<A NAME="pgfId-1470281"></A>Processor Error</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470289"></A>Processor Identification</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470291"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470293"></A>0x0C</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470295"></A>Optional field: on non-ARM architectures, this is the physical APIC ID or the X2APIC ID of the processor which is a target for the injection; on ARM systems, this is the ACPI Processor UID value as used in the MADT.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1475621"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="4">
<P CLASS="TableBody">
<A NAME="pgfId-1470297"></A>Memory Error</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470305"></A>Memory Address</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470307"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470309"></A>0x10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470311"></A>Optional field which specifies the physical address of the memory which is the target for the injection. Valid if Bit [1] of the Flags field is set.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470313"></A>Memory Address Range</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470315"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470317"></A>0x18</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470319"></A>Optional field which provided a range mask for the address field. Valid if Bit [1] of the Flags field is set. If the OSPM doesn&#8217;t want to provide a range of address, then this field should be zero. </P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470321"></A>PCIe SBDF</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470323"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470325"></A>0x20</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1470327"></A>Byte 3 - PCIe Segment</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470328"></A>Byte 2 - Bus Number</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470329"></A>Byte 1 - Device Number [Bits 7:3], Function Number Bits [2:0]</P>
<P CLASS="TableBody">
<A NAME="pgfId-1470330"></A>Byte 0 - RESERVED</P>
</TD>
</TR>
</TABLE>
</DIV>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1468329"></A><A NAME="18164"></A>Vendor Error Type Extension Structure</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1468137"></A>Field</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1468139"></A>Byte Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1468141"></A>Byte Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1468143"></A>Attribute</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1468145"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468147"></A>Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468149"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468151"></A>0x0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468153"></A>Set by software. RO for Platform</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468155"></A> &nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468157"></A>SBDF</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468159"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468161"></A>0x04</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468163"></A>Set by Platform. RO for Software</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468165"></A>This provides a PCIe Segment, Bus, Device and Function number which can be used to read the Vendor ID, Device ID and Rev ID, so that software can identify the system for error injection purposes. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1468166"></A>The platform sets this field and is RO for Software</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468168"></A>Vendor ID  </P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468170"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468172"></A>0x08</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468174"></A>Set by Platform. RO for Software</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468176"></A>Vendor ID which identifies the device manufacturer. This is same as the PCI SIG defined Vendor ID</P>
<P CLASS="TableBody">
<A NAME="pgfId-1468177"></A>The platform sets this field and is RO for Software</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468179"></A>Device ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468181"></A>2</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468183"></A>0x0A</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468185"></A>Set by Platform. RO for Software</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468187"></A>This 16-bit ID is assigned by the manufacturer that identifies this device.</P>
<P CLASS="TableBody">
<A NAME="pgfId-1468188"></A>The platform sets this field and is RO for Software</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468190"></A>Rev ID</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468192"></A>1</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468194"></A>0x0C</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468196"></A>Set by Platform. RO for Software</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468198"></A>This 8-bit value is assigned by the manufacturer and identifies the revision number of the device. </P>
<P CLASS="TableBody">
<A NAME="pgfId-1468199"></A>The platform sets this field and is RO for Software</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468201"></A><EM CLASS="Italic">
Reserved</EM>
</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468203"></A>3</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468205"></A>0x0D</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468207"></A>Set by Platform. RO for Software</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468209"></A>Reserved</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468211"></A>OEM Defined structure </P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468213"></A>N</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468215"></A>0x10</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468217"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1468219"></A>The rest of the fields are defined by the OEM. </P>
</TD>
</TR>
</TABLE>
</DIV>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1468003"></A><A NAME="34164"></A>Trigger Action Table</H4>
<P CLASS="Body">
<A NAME="pgfId-1357316"></A>Error injection operation is a two-step process where the error is injected into the platform and subsequently triggered. After software injects an error into the platform using <EM CLASS="CodeCharacter">
SET_ERROR_TYPE</EM>
 action, it needs to trigger the error. In order to trigger the error, the software invokes <EM CLASS="CodeCharacter">
GET_TRIGGER_ERROR_ACTION_TABLE</EM>
 action which returns a pointer to a Trigger Error Action table. The format of the table is as shown in <A HREF="ACPI_PLatform_Error_Interfaces.htm#97122" CLASS="XRef">See Trigger Error Action.</A>. Software executes the instruction entries specified in the Trigger Error Action Table in order to trigger the injected error.</P>
<DIV>
<H6 CLASS="TableTitle">
<A NAME="pgfId-1357317"></A><A NAME="97122"></A>Trigger Error Action</H6>
<TABLE BORDER="1">
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357320"></A>TRIGGER_ERROR  Header</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357322"></A>Byte Length</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357324"></A>Byte Offset</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357326"></A>Description</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357328"></A>Header Size</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357330"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357332"></A>0</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357334"></A>Length in bytes of this header.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357336"></A>Revision</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357338"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357340"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357342"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357344"></A>Table Size</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357346"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357348"></A>8</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357350"></A>Size in Bytes of the entire table.</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357352"></A>Entry Count</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357354"></A>4</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357356"></A>12</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357358"></A>The number of Instruction Entries in the TRIGGER_ERROR Action Sequence (See Note 1)</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357360"></A>Action Table</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357362"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357364"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableHeading">
<A NAME="pgfId-1357366"></A>&nbsp;</P>
</TD>
</TR>
<TR>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357368"></A>TRIGGER_ERROR Instruction Entries (See Note 2)</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357370"></A>&nbsp;</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357372"></A>16</P>
</TD>
<TD ROWSPAN="1" COLSPAN="1">
<P CLASS="TableBody">
<A NAME="pgfId-1357374"></A>A series of error injection instruction entries as defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#48042" CLASS="XRef">See Injection Instruction Entry.</A>.</P>
</TD>
</TR>
</TABLE>
<UL>
<LI CLASS="Note">
<A NAME="pgfId-1357377"></A>If the &#8220;Entry Count&#8221; field above is ZERO, then there are no action structures in the TRIGGER_ERROR action table. The platform may make this field ZERO in situations where there is no need for a TRIGGER_ERROR action (for example, in cases where the error injection action seeds as well as consumes the error). </LI>
<LI CLASS="Note">
<A NAME="pgfId-1357378"></A>The format of TRIGGER_ERROR Instructions Entries is the same as Injection Instruction entries as described in <A HREF="ACPI_PLatform_Error_Interfaces.htm#32104" CLASS="XRef">See Injection Instructions.</A>.</LI>
</UL>
</DIV>
</DIV>
<DIV>
<H4 CLASS="Heading-3">
<A NAME="pgfId-1357381"></A>E<A NAME="_Toc258262571"></A>rror Injection Operation</H4>
<P CLASS="Body">
<A NAME="pgfId-1357382"></A>Before OSPM can use this mechanism to inject errors, it must discover the error injection capabilities of the platform by executing a GET_ERROR_TYPE. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#18011" CLASS="XRef">See Error Type Definition.</A> for definition of error types.</P>
<P CLASS="Body">
<A NAME="pgfId-1357383"></A>After discovering the error injection capabilities, OSPM can inject and trigger an error according to the sequence described below. </P>
<P CLASS="Body">
<A NAME="pgfId-1357384"></A>Note that injecting an error into the platform does not automatically consume the error. In response to an error injection, the platform returns a trigger error action table. The software that injected the error must execute the actions in the trigger error action table in order to consume the error. If a specific error type is such that it is automatically consumed on injection, the platform will return a trigger error action table consisting of NO_OP.</P>
<OL>
<LI CLASS="StepNumList-1">
<A NAME="pgfId-1357386"></A>Executes a BEGIN_ INJECTION_OPERATION action to notify the platform that an error injection operation is beginning.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1470356"></A>Executes a GET_ERROR_TYPE action to determine the error injection capabilities of the system. This action returns a DWORD bit map of the error types supported by the platform. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#18011" CLASS="XRef">See Error Type Definition.</A> for definition of error types. </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1470360"></A>If GET_ERROR_TYPE returns the DWORD with Bit [31] set, it means that vendor defined error types are present, apart from the standard error types defined in <A HREF="ACPI_PLatform_Error_Interfaces.htm#18011" CLASS="XRef">See Error Type Definition.</A>.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1470364"></A>OSPM chooses the type of error to inject. </LI>
<LI CLASS="StepSubAlpha-1">
<A NAME="pgfId-1470365"></A>If the OSPM chooses to inject one of the supported standard error types, then it sets the corresponding bit in the &#8220;Error Type&#8221; field (see <A HREF="ACPI_PLatform_Error_Interfaces.htm#67486" CLASS="XRef">See SET_ERROR_TYPE_WITH_ADDRESS Data Structure.</A>), by executing a SET_ERROR_TYPE_WITH_ADDRESS command. For example, if OSPM chooses to inject &#8220;Memory Correctable&#8221; error, then the OSPM executes SET_ERROR_TYPE_WITH_ADDRESS with an &#8220;Error Type&#8221; value of 0x0000_0080.  </LI>
<LI CLASS="StepSubBullet">
<A NAME="pgfId-1470369"></A>Optionally, the OSPM can choose the target of the injection, such as a memory range, PCIe Segment/Device/Function or Processor APIC ID, depending on the type of error. The OSPM does this by filling in the appropriate fields of the &#8220;SET_ERROR_TYPE_WITH_ADDRESS Data structure&#8221;. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#67486" CLASS="XRef">See SET_ERROR_TYPE_WITH_ADDRESS Data Structure.</A> for details. </LI>
<LI CLASS="StepSubAlpha-N">
<A NAME="pgfId-1470373"></A>If the OSPM chooses to inject one of the vendor defined error types, then it executes SET_ERROR_TYPE_WITH_ADDRESS with Bit[3]1 of &#8220;Error Type&#8221; field set. </LI>
<LI CLASS="StepSubBullet">
<A NAME="pgfId-1470374"></A>OSPM gets of the location of the &#8220;Vendor Error Type Extension Structure&#8221;, by reading the &#8220;Vendor Error Type Extension Structure Offset&#8221; (see <A HREF="ACPI_PLatform_Error_Interfaces.htm#18164" CLASS="XRef">See Vendor Error Type Extension Structure.</A>). </LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1470378"></A>OSPM reads the Vendor ID, Device ID and Rev ID from the PCI config space whose path (PCIe Segment/Device/Function) is provided in the &#8220;SBDF&#8221; field of the Vendor Error Type Extension Structure. </LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1470379"></A>If the Vendor ID/Device ID and Rev IDs match, then the OSPM can identify the platform it is running on and would know the Vendor error types that are supported by this platform </LI>
<LI CLASS="BulletSubDash">
<A NAME="pgfId-1470380"></A>The OSPM writes the vendor error type to inject in the &#8220;OEM Defined Structure&#8221; field. (see <A HREF="ACPI_PLatform_Error_Interfaces.htm#18164" CLASS="XRef">See Vendor Error Type Extension Structure.</A>)</LI>
<LI CLASS="StepSubBullet">
<A NAME="pgfId-1470384"></A>Optionally, the OSPM can choose the target of the injection, such as a memory range, PCIe Segment/Device/Function or Processor APIC ID, depending on the type of error. The OSPM does this by filling in the appropriate fields of the &#8220;SET_ERROR_TYPE_WITH_ADDRESS Data structure&#8221;. See <A HREF="ACPI_PLatform_Error_Interfaces.htm#67486" CLASS="XRef">See SET_ERROR_TYPE_WITH_ADDRESS Data Structure.</A> for details</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1468249"></A>Executes an EXECUTE_OPERATION action to instruct the platform to begin the injection operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1357389"></A>Busy waits by continually executing CHECK_BUSY_STATUS action until the platform indicates that the operation is complete by clearing the abstracted Busy bit.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1357391"></A>Executes a GET_COMMAND_STATUS action to determine the status of the read operation.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1357392"></A>If the status indicates that the platform cannot inject errors, stop.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1468781"></A>Executes a GET_TRIGGER_ERROR_ACTION_TABLE operation to get the physical pointer to the TRIGGER_ERROR action table. This provides the flexibility in systems where injecting an error is a two (or more) step process.</LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1357394"></A>Executes the actions specified in the TRIGGER_ERROR action table. </LI>
<LI CLASS="StepNumList-N">
<A NAME="pgfId-1346798"></A> Execute an END_OPERATION to notify the platform that the error injection operation is complete.</LI>
</OL>
</DIV>
</DIV>
</DIV>
</BODY>
</HTML>
